#   Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
################################################################################

swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: "v1.1"
  title: "WSO2 API Manager - Publisher API"
  description: |
    This specifies a **RESTful API** for WSO2 **API Manager** - **Publisher**.
    Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.7.206/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher/src/main/resources/publisher-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification.

    # Authentication
    Our REST APIs are protected using OAuth2 and access control is achieved through scopes. Before you start invoking
    the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps
    that you will need to follow to obtain an access token.
    First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types
    in the payload. A Sample payload is shown below.
    ```
      {
      "callbackUrl":"www.google.lk",
      "clientName":"rest_api_publisher",
      "owner":"admin",
      "grantType":"client_credentials password refresh_token",
      "saasApp":true
      }
    ```
    Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the
    base64 encoded admin username and password.
    **Format of the request**
    ```
      curl -X POST -H "Authorization: Basic Base64(admin_username:admin_password)" -H "Content-Type: application/json"
      \ -d @payload.json https://<host>:<servlet_port>/client-registration/v0.17/register
    ```
    **Sample request**
    ```
      curl -X POST -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "Content-Type: application/json"
      \ -d @payload.json https://localhost:9443/client-registration/v0.17/register
    ```
    Following is a sample response after invoking the above curl.
    ```
    {
    "clientId": "fOCi4vNJ59PpHucC2CAYfYuADdMa",
    "clientName": "rest_api_publisher",
    "callBackURL": "www.google.lk",
    "clientSecret": "a4FwHlq0iCIKVs2MPIIDnepZnYMa",
    "isSaasApplication": true,
    "appOwner": "admin",
    "jsonString": "{\"grant_types\":\"client_credentials password refresh_token\",\"redirect_uris\":\"www.google.lk\",\"client_name\":\"rest_api123\"}",
    "jsonAppAttribute": "{}",
    "tokenType": null
    }
    ```
    Next you must use the above client id and secret to obtain the access token.
    We will be using the password grant type for this, you can use any grant type you desire.
    You also need to add the proper **scope** when getting the access token. All possible scopes for publisher REST API can be viewed in **OAuth2 Security** section
    of this document and scope for each resource is given in **authorization** section of resource documentation.
    Following is the format of the request if you are using the password grant type.
    ```
    curl -k -d "grant_type=password&username=<admin_username>&password=<admin_passowrd&scope=<scopes seperated by space>"
    \ -H "Authorization: Basic base64(cliet_id:client_secret)"
    \ https://<host>:<gateway_port>/token
    ```
    **Sample request**
    ```
    curl https://localhost:8243/token -k \
    -H "Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h" \
    -d "grant_type=password&username=admin&password=admin&scope=apim:api_view apim:api_create"
    ```
    Shown below is a sample response to the above request.
    ```
    {
    "access_token": "e79bda48-3406-3178-acce-f6e4dbdcbb12",
    "refresh_token": "a757795d-e69f-38b8-bd85-9aded677a97c",
    "scope": "apim:api_create apim:api_view",
    "token_type": "Bearer",
    "expires_in": 3600
    }
    ```
    Now you have a valid access token, which you can use to invoke an API.
    Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header.
    If you use a different authentication mechanism, this process may change.

    # Try out in Postman
    If you want to try-out the embedded postman collection with "Run in Postman" option, please follow the guidelines listed below.
    * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header with a parameterized access token. Before invoking any REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes.
    * Make sure you have an API Manager instance up and running.
    * Update the `basepath` parameter to match the hostname and port of the APIM instance.

    [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/a09044034b5c3c1b01a9)
  contact:
    name: "WSO2"
    url: "http://wso2.com/products/api-manager/"
    email: "architecture@wso2.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes:
  - https
  - http

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
host: apis.wso2.com

# The base path of the API.
# Will be prefixed to all paths.
basePath: /api/am/publisher/v1

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes:
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requester is specified in the Accept header field
# of the corresponding request.
# The actual media type returned will be specified in the Content-Type header field
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces:
  - application/json

securityDefinitions:
  OAuth2Security:
    type: oauth2
    flow: password
    tokenUrl: https://localhost:9443/oauth2/token
    scopes:
      openid: Authorize access to user details
      apim:api_view: View API
      apim:api_create: Create API
      apim:api_delete: Delete API
      apim:api_publish: Publish API
      apim:subscription_view: View Subscription
      apim:subscription_block: Block Subscription
      apim:external_services_discover: Discover External Services
      apim:threat_protection_policy_create: Create threat protection policies
      apim:threat_protection_policy_manage: Update and delete threat protection policies
      apim:document_create: Create API documents
      apim:document_manage: Update and delete API documents
      apim:mediation_policy_view: View mediation policies
      apim:mediation_policy_create: Create mediation policies
      apim:mediation_policy_manage: Update and delete mediation policies
      apim:client_certificates_view: View client certificates
      apim:client_certificates_add: Add client certificates
      apim:client_certificates_update: Update and delete client certificates
      apim:ep_certificates_view: View backend endpoint certificates
      apim:ep_certificates_add: Add backend endpoint certificates
      apim:ep_certificates_update: Update and delete backend endpoint certificates
      apim:publisher_settings: Retrieve store settings
      apim:pub_alert_manage: Get/ subscribe/ configure publisher alerts
      apim:shared_scope_manage: Manage shared scopes
      apim:app_import_export: Import and export applications related operations
      apim:api_import_export: Import and export APIs related operations
      apim:api_product_import_export: Import and export API Products related operations

security:
  - OAuth2Security:
      - apim:api_view

######################################################
# The "API Collection" resource APIs
######################################################
paths:
  /apis:

    #-----------------------------------------------------
    # Retrieving the list of all APIs qualifying under a given search condition
    #-----------------------------------------------------
    get:
      summary: |
        Retrieve/Search APIs
      description: |
        This operation provides you a list of available APIs qualifying under a given search condition.

        Each retrieved API is represented with a minimal amount of attributes. If you want to get complete details of an API, you need to use **Get details of an API** operation.
      security:
        - OAuth2Security:
            - apim:api_view
            - apim:api_import_export
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis"
      parameters:
        - $ref : '#/parameters/limit'
        - $ref : '#/parameters/offset'
        - $ref : '#/parameters/requestedTenant'
        - name : query
          in: query
          description: |
            **Search condition**.

            You can search in attributes by using an **"<attribute>:"** modifier.

            Eg.
            "provider:wso2" will match an API if the provider of the API contains "wso2".
            "provider:"wso2"" will match an API if the provider of the API is exactly "wso2".
            "status:PUBLISHED" will match an API if the API is in PUBLISHED state.
            "label:external" will match an API if it contains a Microgateway label called "external".

            Also you can use combined modifiers
            Eg.
            name:pizzashack version:v1 will match an API if the name of the API is pizzashack and version is v1.

            Supported attribute modifiers are [**version, context, name, status,
            description, subcontext, doc, provider, label**]

            If no advanced attribute modifier has been specified,  the API names containing
            the search term will be returned as a result.

            Please note that you need to use encoded URL (URL encoding) if you are using a client which does not support URL encoding (such as curl)

          type: string
        - $ref : "#/parameters/If-None-Match"
        - $ref : "#/parameters/expand"
        - $ref : "#/parameters/Accept"
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            List of qualifying APIs is returned.
          schema:
            $ref: '#/definitions/APIList'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Create a new API
    #-----------------------------------------------------
    post:
      security:
        - OAuth2Security:
            - apim:api_create
      summary: Create a New API
      description: |
        This operation can be used to create a new API specifying the details of the API in the payload. The new API will be in `CREATED` state.

        There is a special capability for a user who has `APIM Admin` permission such that he can create APIs on behalf of other users. For that he can to specify `"provider" : "some_other_user"` in the payload so that the API's creator will be shown as `some_other_user` in the UI.
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/apis"
      parameters:
        - in: body
          name: body
          description: |
            API object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/API'
        - in: query
          name: openAPIVersion
          description: Open api version
          type: string
          enum:
            - V2
            - V3
      tags:
        - APIs
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/API'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          $ref: '#/responses/UnsupportedMediaType'

  ######################################################
  # The "Individual API" resource APIs
  ######################################################
  /apis/{apiId}:

    #-----------------------------------------------------
    # Retrieve the details of an API definition
    #-----------------------------------------------------
    get:
      summary: Get Details of an API
      description: |
        Using this operation, you can retrieve complete details of a single API. You need to provide the Id of the API to retrive it.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/requestedTenant'
        - $ref: '#/parameters/If-None-Match'
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/7a2298c4-c905-403f-8fac-38c73301631f"
      security:
        - OAuth2Security:
            - apim:api_view
            - apim:api_import_export
            - apim:api_product_import_export
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            Requested API is returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
          schema:
            $ref: '#/definitions/API'
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Update the definition of an API
    #-----------------------------------------------------
    put:
      security:
        - OAuth2Security:
            - apim:api_create
            - apim:api_publish
      summary: Update an API
      description: |
        This operation can be used to update an existing API.
        But the properties `name`, `version`, `context`, `provider`, `state` will not be changed by this operation.
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/apis/7a2298c4-c905-403f-8fac-38c73301631f"
      parameters:
        - $ref: '#/parameters/apiId'
        - in: body
          name: body
          description: |
            API object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/API'
        - $ref: '#/parameters/If-Match'
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            Successful response with updated API object
          schema:
            $ref: '#/definitions/API'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
        409:
          $ref: '#/responses/Conflict'
        412:
          $ref: '#/responses/PreconditionFailed'

    #-----------------------------------------------------
    # Delete the definition of an API
    #-----------------------------------------------------
    delete:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/7a2298c4-c905-403f-8fac-38c73301631f"
      security:
        - OAuth2Security:
            - apim:api_delete
            - apim:api_import_export
      summary: Delete an API
      description: |
        This operation can be used to delete an existing API proving the Id of the API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-Match'
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
        409:
          $ref: '#/responses/Conflict'
        412:
          $ref: '#/responses/PreconditionFailed'

  ################################################################
  # The swagger resource of "Individual API" resource APIs
  ################################################################

  /apis/{apiId}/swagger:
    #-----------------------------------------------------
    # Retrieve the API swagger definition
    #-----------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/7a2298c4-c905-403f-8fac-38c73301631f/swagger"
      summary: Get Swagger Definition
      description: |
        This operation can be used to retrieve the swagger definition of an API.
      security:
        - OAuth2Security:
            - apim:api_view
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - APIs
      responses:
        200:
          schema:
            type: string
            example: ""
          description: |
            OK.
            Requested swagger document of the API is returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Update the API swagger definition
    #-----------------------------------------------------
    put:
      consumes:
        - multipart/form-data
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F apiDefinition=@swagger.json "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/swagger"
      security:
        - OAuth2Security:
            - apim:api_create
      summary: Update Swagger Definition
      description: |
        This operation can be used to update the swagger definition of an existing API. Swagger definition to be updated is passed as a form data parameter `apiDefinition`.
      parameters:
        - $ref: '#/parameters/apiId'
        - in: formData
          name: apiDefinition
          description: Swagger definition of the API
          type: string
        - in: formData
          name: url
          description: Swagger definition URL of the API
          type: string
        - in: formData
          name: file
          description: Swagger definitio as a file
          type: file
          required: false
        - $ref: '#/parameters/If-Match'
      tags:
        - APIs
      responses:
        200:
          schema:
            type: string
            example: ""
          description: |
            OK.
            Successful response with updated Swagger definition
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ################################################################
  # Generates Mock/Sample Payloads from Examples in API Definition
  ################################################################

  /apis/{apiId}/generate-mock-scripts:
    #-----------------------------------------------------
    # Generate Mock responses from Swagger/OAS Definition
    #-----------------------------------------------------
    post:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/7a2298c4-c905-403f-8fac-38c73301631f/generate-mock-scripts"
      operationId: generateMockScripts
      summary: Generate Mock Response Payloads
      description: |
        This operation can be used to generate mock responses from examples of swagger definition of an API.
      security:
        - OAuth2Security:
            - apim:api_create
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - APIs
      responses:
        200:
          schema:
            type: string
            example: ""
          description: |
            OK.
            Requested swagger document of the API is returned with example responses
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ################################################################
  # Generated Mock/Sample Payloads from Examples in API Definition
  ################################################################

  /apis/{apiId}/generated-mock-scripts:
    #-----------------------------------------------------
    # resets Mock responses from Swagger/OAS Definition
    #-----------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/7a2298c4-c905-403f-8fac-38c73301631f/generated-mock-scripts"
      operationId: getGeneratedMockScriptsOfAPI
      summary: Get Generated Mock Response Payloads
      description: |
        This operation can be used to get generated mock responses from examples of swagger definition of an API.
      security:
        - OAuth2Security:
            - apim:api_create
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - APIs
      responses:
        200:
          schema:
            $ref: '#/definitions/MockResponsePayloadList'
          description: |
            OK.
            Requested swagger document of the API is returned with example responses
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ################################################################
  # The resource policy definitions of "Individual API" resource APIs
  ################################################################

  /apis/{apiId}/resource-policies:
    #-----------------------------------------------------
    # Retrieve the resource policy definition
    #-----------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/resource-policies?resourcePath=checkPhoneNumber&verb=post&sequenceType=in"
      summary: Get the Resource Policy(inflow/outflow) Definitions
      description: |
        This operation can be used to retrieve conversion policy resource definitions of an API.
      security:
        - OAuth2Security:
            - apim:api_view
      parameters:
        - $ref: '#/parameters/apiId'
        - in: query
          name: resourcePath
          description: Resource path of the resource policy definition
          type: string
          required: false
        - in: query
          name: verb
          description: HTTP verb of the resource path of the resource policy definition
          type: string
          required: false
        - in: query
          name: sequenceType
          description: sequence type of the resource policy resource definition
          type: string
          required: true
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Resource Policies
      responses:
        200:
          description: |
            OK.
            List of resource policy definitions of the API is returned
          schema:
            $ref: '#/definitions/ResourcePolicyList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ################################################################
  # The "Individual Resource Policy" APIs
  ################################################################

  /apis/{apiId}/resource-policies/{resourcePolicyId}:
    #--------------------------------------------------------------------------
    # Retrieve the resource policy definition of a certain resource given by id
    #---------------------------------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/resource-policies/8efc32a4-c7f1-4bee-b860-b7566e2bc0d5"
      summary: Get the Resource Policy(inflow/outflow) Definition for a Given Resource Identifier.
      description: |
        This operation can be used to retrieve conversion policy resource definitions of an API given the resource identifier.
      security:
        - OAuth2Security:
            - apim:api_view
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/resourcePolicyId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Resource Policies
      responses:
        200:
          description: |
            OK.
            Requested resource policy definition of the API is returned for the given resource identifier.
          schema:
            $ref: '#/definitions/ResourcePolicyInfo'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #------------------------------------------------------------------------
    # Update the resource policy definition for the given resource identifier
    #------------------------------------------------------------------------
    put:
      consumes:
        - application/json
      security:
        - OAuth2Security:
          - apim:api_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/resource-policies/8efc32a4-c7f1-4bee-b860-b7566e2bc0d5"
      summary: Update the Resource Policy(inflow/outflow) Definition for the Given Resource Identifier
      description: |
        This operation can be used to update the resource policy(inflow/outflow) definition for the given resource identifier of an existing API. resource policy definition to be updated is passed as a body parameter `content`.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/resourcePolicyId'
        - in: body
          name: body
          description: Content of the resource policy definition that needs to be updated
          schema:
            $ref: '#/definitions/ResourcePolicyInfo'
          required: true
        - $ref: '#/parameters/If-Match'
      tags:
        - API Resource Policies
      responses:
        200:
          description: |
            OK.
            Successful response with updated the resource policy definition
          schema:
            $ref: '#/definitions/ResourcePolicyInfo'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ################################################################
  # The thumbnail resource of "Individual API" resource APIs
  ################################################################

  /apis/{apiId}/thumbnail:
    #-------------------------------------------------------------------------------------------------
    # Downloads a thumbnail image of an API
    #-------------------------------------------------------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/thumbnail"
      summary: Get Thumbnail Image
      description: |
        This operation can be used to download a thumbnail image of an API.
      security:
        - OAuth2Security:
            - apim:api_view
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            Thumbnail image returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #----------------------------------------------------------------------------
    # Upload a thumbnail image to a certain API
    #----------------------------------------------------------------------------
    put:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=image.jpeg "https://127.0.0.1:9443/api/am/publisher/v1/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/thumbnail"
      summary: Upload a Thumbnail Image
      operationId: updateAPIThumbnail
      description: |
        This operation can be used to upload a thumbnail image of an API. The thumbnail to be uploaded should be given as a form data parameter `file`.
      parameters:
        - $ref: '#/parameters/apiId'
        - in: formData
          name: file
          description: Image to upload
          type: file
          required: true
        - $ref: '#/parameters/If-Match'
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            Image updated
          schema:
            $ref : '#/definitions/FileInfo'
          headers:
            Location:
              description: |
                The URL of the uploaded thumbnail image of the API.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ######################################################
  # The "API Throttling Policy" resource APIs
  ######################################################
  '/apis/{apiId}/subscription-policies':

    #-----------------------------------------------------
    # Retrieve subscription throttling policies of an API
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/2fd14eb8-b828-4013-b448-0739d2e76bf7/subscription-policies"
      summary: |
        Get Details of the Subscription Throttling Policies of an API
      description: |
        This operation can be used to retrieve details of the subscription throttling policy of an API by specifying the API Id.

        `X-WSO2-Tenant` header can be used to retrive API subscription throttling policies that belongs to a different tenant domain. If not specified super tenant will be used. If Authorization header is present in the request, the user's tenant associated with the access token will be used.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/requestedTenant'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            Throttling Policy returned
          schema:
            $ref: '#/definitions/ThrottlingPolicy'
          headers:
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ######################################################
  # The "Copy API" Processing Function resource API
  ######################################################
  /apis/copy-api:

    #-----------------------------------------------------
    # Create a new API based on an already existing one
    #-----------------------------------------------------
    post:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/copy-api?newVersion=2.0&defaultVersion=false&apiId=2fd14eb8-b828-4013-b448-0739d2e76bf7"
      security:
        - OAuth2Security:
            - apim:api_create
      summary: Create a New API Version
      description: |
        This operation can be used to create a new version of an existing API. The new version is specified as `newVersion` query parameter. New API will be in `CREATED` state.
      parameters:
        - name: newVersion
          description: Version of the new API.
          type: string
          in: query
          required: true
        - name: defaultVersion
          description: Specifies whether new API should be added as default version.
          type: boolean
          default: false
          in: query
        - $ref: '#/parameters/apiId-Q'
      tags:
        - APIs
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created API as entity in the body. Location header contains URL of newly created API.
          schema:
            $ref: '#/definitions/API'
          headers:
            Location:
              description: |
                The URL of the newly created API.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "Change Lifecycle" Processing Function resource API
  ######################################################
  /apis/change-lifecycle:

    #-----------------------------------------------------
    # Change the lifecycle of an API
    #-----------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:api_publish
          - apim:api_import_export
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/change-lifecycle?apiId=890a4f4d-09eb-4877-a323-57f6ce2ed79b&action=Publish"
      summary: Change API Status
      description: |
        This operation is used to change the lifecycle of an API. Eg: Publish an API which is in `CREATED` state. In order to change the lifecycle, we need to provide the lifecycle `action` as a query parameter.

        For example, to Publish an API, `action` should be `Publish`. Note that the `Re-publish` action is available only after calling `Block`.

        Some actions supports providing additional paramters which should be provided as `lifecycleChecklist` parameter. Please see parameters table for more information.
      parameters:
        - name: action
          description: |
            The action to demote or promote the state of the API.

            Supported actions are [ **Publish**, **Deploy as a Prototype**, **Demote to Created**, **Block**, **Deprecate**, **Re-Publish**, **Retire** ]

          in: query
          type: string
          required: true
          enum:
            - Publish
            - Deploy as a Prototype
            - Demote to Created
            - Block
            - Deprecate
            - Re-Publish
            - Retire
        - name: lifecycleChecklist
          description: |

            Supported checklist items are as follows.
            1. **Deprecate old versions after publishing the API**: Setting this to true will deprecate older versions of a particular API when it is promoted to Published state from Created state.
            2. **Requires re-subscription when publishing the API**: If you set this to true, users need to re subscribe to the API although they may have subscribed to an older version.
            You can specify additional checklist items by using an **"attribute:"** modifier.
            Eg: "Deprecate old versions after publishing the API:true" will deprecate older versions of a particular API when it is promoted to Published state from Created state. Multiple checklist items can be given in "attribute1:true, attribute2:false" format.
            **Sample CURL :**  curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -X POST "https://localhost:9443/api/am/publisher/v1/apis/change-lifecycle?apiId=890a4f4d-09eb-4877-a323-57f6ce2ed79b&action=Publish&lifecycleChecklist=Deprecate%20old%20versions%20after%20publishing%20the%20API%3Atrue,Requires%20re-subscription%20when%20publishing%20the%20API%3Afalse"

          type: string
          in: query
        - $ref: '#/parameters/apiId-Q'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Lifecycle
      responses:
        200:
          description: |
            OK.
            Lifecycle changed successfully.
          schema:
            $ref: '#/definitions/WorkflowResponse'
          headers:
            ETag:
              description: |
                Entity Tag of the changed API. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the API lifecycle has been modified the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        202:
          description: |
            Accepted.
            The request has been accepted.
          schema:
            $ref: '#/definitions/WorkflowResponse'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        409:
          $ref: '#/responses/Conflict'
        412:
          $ref: '#/responses/PreconditionFailed'

  ######################################################
  #  The "API State Change History"  resource API
  ######################################################
  /apis/{apiId}/lifecycle-history:

    #--------------------------------------------
    # Retrieve API LIfecycle change History
    #--------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/lifecycle-history"
      summary: Get Lifecycle State Change History of the API.
      description: |
        This operation can be used to retrieve Lifecycle state change history of the API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Lifecycle
      responses:
        200:
          description: |
            OK.
            Lifecycle state change history returned successfully.
          schema:
            $ref: '#/definitions/LifecycleHistory'
          headers:
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  #  The "API Lifecycle State Data"  resource API
  ######################################################
  /apis/{apiId}/lifecycle-state:

    #--------------------------------------------
    # Retrieve API LIfecycle state data
    #--------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_publish
          - apim:api_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/lifecycle-state"
      summary: Get Lifecycle State Data of the API.
      description: |
        This operation can be used to retrieve Lifecycle state data of the API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-None-Match'

      tags:
        - API Lifecycle
      responses:
        200:
          description: |
            OK.
            Lifecycle state data returned successfully.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
          schema:
            $ref: '#/definitions/LifecycleState'
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ######################################################
  #  The "API Lifecycle State Data"  resource API
  ######################################################
  /apis/{apiId}/lifecycle-state/pending-tasks:

    #--------------------------------------------
    # Delete API LIfecycle state change pending task
    #--------------------------------------------
    delete:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/lifecycle-state/pending-tasks"
      security:
        - OAuth2Security:
            - apim:api_publish
      summary: Delete Pending Lifecycle State Change Tasks
      description: |
        This operation can be used to remove pending lifecycle state change requests that are in pending state
      parameters:
        - $ref: '#/parameters/apiId'
      tags:
        - API Lifecycle
      responses:
        200:
          description: |
            OK.
            Lifecycle state change pending task removed successfully.
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ######################################################
  # The "Import API from OpenAPI Definition" resource API
  ######################################################

  /apis/import-openapi:

    #----------------------------------------------------------------------------
    # Import API from API Definition
    #----------------------------------------------------------------------------
    post:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
            - apim:api_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@openapi.json -F additionalProperties=@data.json "https://127.0.0.1:9443/api/am/publisher/v1/apis/import-openapi"
      summary: Import an OpenAPI Definition
      description: |
        This operation can be used to create an API from an OpenAPI definition. Provide either `url` or `file`
        to specify the definition.

        Specify additionalProperties with **at least** API's name, version, context and endpointConfig.
      operationId: importOpenAPIDefinition
      parameters:
        - in: formData
          name: file
          description: Definition to upload as a file
          type: file
          required: false
        - in: formData
          name: url
          description: Definition url
          type: string
          required: false
        - in: formData
          name: additionalProperties
          description: Additional attributes specified as a stringified JSON with API's schema
          type: string
          required: false
      tags:
        - APIs
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/API'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          $ref: '#/responses/UnsupportedMediaType'

  ######################################################
  # The "Import API from a WSDL Definition"  resource API
  ######################################################

  /apis/import-wsdl:

    #----------------------------------------------------------------------------
    # Import API from a WSDL Definition
    #----------------------------------------------------------------------------
    post:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
            - apim:api_create
      summary: Import a WSDL Definition
      operationId: importWSDLDefinition
      description: |
        This operation can be used to create an API using a WSDL definition. Provide either `url` or `file`
        to specify the definition.

        WSDL can be speficied as a single file or a ZIP archive with WSDLs and reference XSDs etc.
        Specify additionalProperties with **at least** API's name, version, context and endpointConfig.
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@api.wsdl -F additionalProperties=@data.json "https://127.0.0.1:9443/api/am/publisher/v1/apis/import-wsdl"
      parameters:
        - in: formData
          name: file
          description: WSDL definition as a file
          type: file
          required: false
        - in: formData
          name: url
          description: WSDL Definition url
          type: string
          required: false
        - in: formData
          name: additionalProperties
          description: Additional attributes specified as a stringified JSON with API's schema
          type: string
          required: false
        - in: formData
          name: implementationType
          type: string
          enum:
            - SOAPTOREST
            - SOAP
          default: SOAP
          description: |
            If 'SOAP' is specified, the API will be created with only one resource 'POST /*' which is to be used for SOAP
            operations.

            If 'HTTP_BINDING' is specified, the API will be created with resources using HTTP binding operations
            which are extracted from the WSDL.
          required: false
      tags:
        - APIs
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/API'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          $ref: '#/responses/UnsupportedMediaType'

  ######################################################
  # The "Import GraphQL API Schema from API Definition"  resource API
  ######################################################

  /apis/import-graphql-schema:

    #----------------------------------------------------------------------------
    # Import API from API Definition
    #----------------------------------------------------------------------------
    post:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
            - apim:api_create
      summary: Import API Definition
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@schema.graphql -F additionalProperties=@data.json "https://127.0.0.1:9443/api/am/publisher/v1/apis/import-graphql-schema"
      description: |
        This operation can be used to create api from api definition.APIMgtDAOTest

        API definition is GraphQL Schema
      parameters:
        - in: formData
          name: type
          description: Definition type to upload
          type: string
          required: false
        - in: formData
          name: file
          description: Definition to uploads a file
          type: file
          required: false
        - in: formData
          name: additionalProperties
          description: Additional attributes specified as a stringified JSON with API's schema
          type: string
          required: false
        - $ref: '#/parameters/If-Match'
      tags:
        - APIs
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/API'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          $ref: '#/responses/UnsupportedMediaType'

  ######################################################
  # The "Validate API Definition" utility API
  ######################################################

  /apis/validate-openapi:
    post:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
            - apim:api_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@openapi.json "https://127.0.0.1:9443/api/am/publisher/v1/apis/validate-openapi"
      summary: Validate an OpenAPI Definition
      operationId: validateOpenAPIDefinition
      description: |
        This operation can be used to validate an OpenAPI definition and retrieve a summary. Provide either `url`
        or `file` to specify the definition.
      parameters:
        - in: formData
          name: url
          description: OpenAPI definition url
          type: string
          required: false
        - in: formData
          name: file
          description: OpenAPI definition as a file
          type: file
          required: false
        - in: query
          name: returnContent
          description: |
            Specify whether to return the full content of the OpenAPI definition in the response. This is only
            applicable when using url based validation
          type: boolean
          default: false
          required: false
      tags:
        - Validation
      responses:
        200:
          description: |
            OK.
            API definition validation information is returned
          schema:
            $ref: '#/definitions/OpenAPIDefinitionValidationResponse'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'

  /apis/validate-endpoint:
    post:
      security:
        - OAuth2Security:
            - apim:api_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/validate-endpoint?apiId=e0824883-3e86-403a-aec1-22bbc454eb7c&endpointUrl=https%3A%2F%2Flocalhost%3A9443%2Fam%2Fsample%2Fpizzashack%2Fv1%2Fapi%2F"
      summary: Check Whether Given Endpoint URL is Valid
      operationId: validateEndpoint
      description: |
        Using this operation, it is possible check whether the given API endpoint url is a valid url
      parameters:
        - in: query
          name: endpointUrl
          description: API endpoint url
          type: string
          required: true
        - in: query
          name: apiId
          type: string
          required: false
      tags:
        - Validation
      responses:
        200:
          description: |
            OK.
            API definition validation information is returned
          schema:
            $ref: '#/definitions/ApiEndpointValidationResponse'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "Validate API" utility API.
  # This api is used to check the existence of
  # apiName and context/version.
  ######################################################

  /apis/validate:
    post:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/validate?query=name%3Awso2"
      security:
        - OAuth2Security:
            - apim:api_create
      summary: Check Given API Context Name already Exists
      operationId: validateAPI
      description: |
        Using this operation, you can check a given API context is already used. You need to provide the context name you want to check.
      parameters:
        - in: query
          name: query
          description: |
            **Search condition**.

            You can search in attributes by using an **"<attribute>:"** modifier.

            Eg.
            "name:wso2" will match an API if the provider of the API is exactly "wso2".

            Supported attribute modifiers are [** version, context, name **]

            If no advanced attribute modifier has been specified, search will match the
            given query string against API Name.
          type: string
          required: true
        - $ref: "#/parameters/If-None-Match"
      tags:
        - Validation
      responses:
        200:
          description: |
            OK.
            API definition validation information is returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "Validate WSDL Definition" utility API
  ######################################################

  /apis/validate-wsdl:
    post:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
            - apim:api_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@api.wsdl "https://127.0.0.1:9443/api/am/publisher/v1/apis/validate-wsdl"
      summary: Validate a WSDL Definition
      operationId: validateWSDLDefinition
      description: |
        This operation can be used to validate a WSDL definition and retrieve a summary. Provide either `url`
        or `file` to specify the definition.
      parameters:
        - in: formData
          name: url
          description: Definition url
          type: string
          required: false
        - in: formData
          name: file
          description: Definition to upload as a file
          type: file
          required: false
      tags:
        - Validation
      responses:
        200:
          description: |
            OK.
            API definition validation information is returned
          schema:
            $ref: '#/definitions/WSDLValidationResponse'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "Validate GRAPH_QL API Definition" utility API
  ######################################################

  /apis/validate-graphql-schema:
    post:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
            - apim:api_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@schema.graphql "https://127.0.0.1:9443/api/am/publisher/v1/apis/validate-graphql-schema"
      summary: Validate GraphQL API Definition and Retrieve a Summary
      description: |
        This operation can be used to validate a graphQL definition and retrieve a summary.
      parameters:
        - in: formData
          name: file
          description: Definition to upload as a file
          type: file
          required: true
      tags:
        - Validation
      responses:
        200:
          description: |
            OK.
            API definition validation information is returned
          schema:
            $ref: '#/definitions/GraphQLValidationResponse'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The GraphQL Schema Resource
  ######################################################

  /apis/{apiId}/graphql-schema:
    #-----------------------------------------------------
    # Retrieve the details about a certain GraphQL schema
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/e0824883-3e86-403a-aec1-22bbc454eb7c/graphql-schema"
      summary: Get the Schema of a GraphQL API
      description: |
        This operation can be used to retrieve the Schema definition of a GraphQL API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - GraphQL Schema (Individual)
      responses:
        200:
          description: |
            OK.
            Requested GraphQL Schema DTO object belongs to the API
          schema:
            $ref: '#/definitions/GraphQLSchema'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string

        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Add a GraphQL schema to the registry
    #-----------------------------------------------------
    put:
      security:
        - OAuth2Security:
            - apim:api_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F schemaDefinition=@schema.graphql "https://127.0.0.1:9443/api/am/publisher/v1/apis/e0824883-3e86-403a-aec1-22bbc454eb7c/graphql-schema"
      summary: Add a Schema to a GraphQL API
      description: |
        This operation can be used to add a GraphQL Schema definition to an existing GraphQL API.
      parameters:
        - $ref: '#/parameters/apiId'
        - in: formData
          name: schemaDefinition
          description: schema definition of the GraphQL API
          type: string
          required: true
        - $ref: '#/parameters/If-Match'
      consumes:
        - multipart/form-data
      tags:
        - GraphQL Schema
      responses:
        200:
          description: |
            OK.
            Successful response with updated schema definition
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by cache, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ######################################################
  # AWS Lambda
  ######################################################
  /apis/{apiId}/amznResourceNames:
    #-----------------------------------------------------
    # Retrieve the ARNs of AWS Lambda functions
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/e0824883-3e86-403a-aec1-22bbc454eb7c/amznResourceNames"
      summary: Retrieve the ARNs of AWS Lambda Functions
      description: |
        This operation can be use to retrieve ARNs of AWS Lambda function for a given AWS credentials.
      parameters:
        - $ref: '#/parameters/apiId'
      tags:
        - AWS Lambda (Individual)
      responses:
        200:
          description: |
            OK.
            Requested ARN List of the API is returned
          schema:
            type: string
            example: "{\n   \"count\": \"2\",\n   \"list\": [\n      \"arn:aws:lambda:us-west-2:123456789012:function:my-function1\",\n      \"arn:aws:lambda:us-west-2:123456789012:function:my-function2\"\n   ]\n}"
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        404:
          $ref: '#/responses/NotFound'

  #########################################################
  # The "Configure Monetization" Processing Function resource API
  #########################################################
  /apis/{apiId}/monetize:
    #---------------------------------------
    # Configure monetization for a given API
    #---------------------------------------
    post:
      security:
        - OAuth2Security:
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/monetize
      summary: Configure Monetization for a Given API
      description: |
        This operation can be used to configure monetization for a given API.
      parameters:
        - $ref: '#/parameters/apiId'
        - in: body
          name: body
          description: |
            Monetization data object
          required: true
          schema:
            $ref: '#/definitions/APIMonetizationInfo'
      tags:
        - API Monetization
      responses:
        201:
          description: |
            OK.
            Monetization status changed successfully.
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  #########################################################
  # The get monetizied policies processing function resource API
  #########################################################
  /apis/{apiId}/monetization:
    #---------------------------------------
    # Get monetized policies for a given API
    #---------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/monetize"
      summary: Get Monetization Status for each Tier in a Given API
      description: |
        This operation can be used to get monetization status for each tier in a given API
      parameters:
        - $ref: '#/parameters/apiId'
      tags:
        - API Monetization
      responses:
        200:
          description: |
            OK.
            Monetization status for each tier returned successfully.
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ######################################################
  # The "Get Total Revenue" Processing Function resource API
  ######################################################
  /apis/{apiId}/revenue:
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/revenue"
      security:
        - OAuth2Security:
            - apim:api_publish
      summary: Get Total Revenue Details of a Given Monetized API with Meterd Billing
      description: |
        This operation can be used to get details of total revenue details of a given monetized API with meterd billing.
      parameters:
        - $ref: '#/parameters/apiId'
      tags:
        - API Monetization
      responses:
        200:
          description: |
            OK.
            Details of a total revenue returned.
          schema:
            $ref: '#/definitions/APIRevenue'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: 'Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).'
              type: string
            Last-Modified:
              description: 'Date and time the resource has been modified the last time. Used by caches, or in conditional requests (Will be supported in future).'
              type: string
        '304':
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        '404':
          $ref: '#/responses/NotFound'

  ######################################################
  # The "Document Collection" resource APIs
  ######################################################
  /apis/{apiId}/documents:

    #-----------------------------------------------------
    # Retrieve the documents associated with an API that qualify under a search condition
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/e0824883-3e86-403a-aec1-22bbc454eb7c/documents"
      summary: Get a List of Documents of an API
      description: |
        This operation can be used to retrieve a list of documents belonging to an API by providing the id of the API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Documents
      responses:
        200:
          description: |
            OK.
            Document list is returned.
          schema:
            $ref: '#/definitions/DocumentList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Add a document to a certain API
    #-----------------------------------------------------
    post:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents"
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:document_create
      summary: Add a New Document to an API
      description: |
        This operation can be used to add a new documentation to an API. This operation only adds the metadata of a document. To add the actual content we need to use **Upload the content of an API document ** API once we obtain a document Id by this operation.
      parameters:
        - $ref: '#/parameters/apiId'
        - in: body
          name: body
          description: |
            Document object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Document'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Documents
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created Document object as entity in the body.
            Location header contains URL of newly added document.
          schema:
            $ref: '#/definitions/Document'
          headers:
            Location:
              description: |
                Location to the newly created Document.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          $ref: '#/responses/UnsupportedMediaType'

  ######################################################
  # The "Individual Document" resource APIs
  ######################################################
  '/apis/{apiId}/documents/{documentId}':

    #-----------------------------------------------------
    # Retrieve a particular document of a certain API
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/0bcb7f05-599d-4e1a-adce-5cb89bfe58d5"
      summary: Get a Document of an API
      description: |
        This operation can be used to retrieve a particular document's metadata associated with an API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/documentId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Documents
      responses:
        200:
          description: |
            OK.
            Document returned.
          schema:
            $ref: '#/definitions/Document'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Update a particular document of a certain API
    #-----------------------------------------------------
    put:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @doc.json "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/0bcb7f05-599d-4e1a-adce-5cb89bfe58d5"
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:document_manage
      summary: Update a Document of an API
      description: |
        This operation can be used to update metadata of an API's document.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/documentId'
        - in: body
          name: body
          description: |
            Document object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Document'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Documents
      responses:
        200:
          description: |
            OK.
            Document updated
          schema:
            $ref: '#/definitions/Document'
          headers:
            Location:
              description: |
                The URL of the updated document.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

    #-----------------------------------------------------
    # Delete a particular document of a certain API
    #-----------------------------------------------------
    delete:
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:document_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/0bcb7f05-599d-4e1a-adce-5cb89bfe58d5"
      summary: Delete a Document of an API
      description: |
        This operation can be used to delete a document associated with an API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/documentId'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Documents
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ################################################################
  # The content resource of "Individual Document" resource APIs
  ################################################################

  '/apis/{apiId}/documents/{documentId}/content':

    #-------------------------------------------------------------------------------------------------
    # Downloads a FILE type document/get the inline content or source url of a certain document
    #-------------------------------------------------------------------------------------------------
    get:
      produces:
        - application/octet-stream
      security:
        - OAuth2Security:
          - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/0bcb7f05-599d-4e1a-adce-5cb89bfe58d5/content"
      summary: Get the Content of an API Document
      description: |
        This operation can be used to retrive the content of an API's document.

        The document can be of 3 types. In each cases responses are different.

        1. **Inline type**:
           The content of the document will be retrieved in `text/plain` content type

           _Sample cURL_ : `curl -k -H "Authorization:Bearer 579f0af4-37be-35c7-81a4-f1f1e9ee7c51" -F inlineContent=@"docs.txt" -X POST "https://localhost:9443/api/am/publisher/v1/apis/995a4972-3178-4b17-a374-756e0e19127c/documents/43c2bcce-60e7-405f-bc36-e39c0c5e189e/content`
        2. **FILE type**:
           The file will be downloaded with the related content type (eg. `application/pdf`)
        3. **URL type**:
            The client will recieve the URL of the document as the Location header with the response with - `303 See Other`
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/documentId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Documents
      responses:
        200:
          description: |
            OK.
            File or inline content returned.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        303:
          description: |
            See Other.
            Source can be retrived from the URL specified at the Location header.
          headers:
            Location:
              description: |
                The Source URL of the document.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #----------------------------------------------------------------------------
    # Upload a file or add inline content to a document of a certain API
    #----------------------------------------------------------------------------
    post:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:document_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@sample.pdf "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/0bcb7f05-599d-4e1a-adce-5cb89bfe58d5/content"
      summary: Upload the Content of an API Document
      description: |
        Thid operation can be used to upload a file or add inline content to an API document.

        **IMPORTANT:**
        * Either **file** or **inlineContent** form data parameters should be specified at one time.
        * Document's source type should be **FILE** in order to upload a file to the document using **file** parameter.
        * Document's source type should be **INLINE** in order to add inline content to the document using **inlineContent** parameter.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/documentId'
        - in: formData
          name: file
          description: Document to upload
          type: file
          required: false
        - in: formData
          name: inlineContent
          description: Inline content of the document
          type: string
          required: false
        - $ref: '#/parameters/If-Match'
      tags:
        - API Documents
      responses:
        200:
          description: |
            OK.
            Document updated
          schema:
            $ref: '#/definitions/Document'
          headers:
            Location:
              description: |
                The URL of the updated content of the document.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  #----------------------------------------------------------------------------
  # API Document Name validation method.
  #----------------------------------------------------------------------------
  /apis/{apiId}/documents/validate:
    post:
      security:
        - OAuth2Security:
            - apim:api_create
            - apim:document_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/documents/validate?name=CalculatorDoc"
      summary: Check Whether a Document with the Provided Name Exist
      description: |
        This operation can be used to verify the document name exists or not.
      operationId: validateDocument
      parameters:
        - $ref: '#/parameters/apiId'
        - in: query
          name: name
          description: |
            The name of the document which needs to be checked for the existance.
          required: true
          type: string
        - $ref: '#/parameters/If-Match'
      tags:
        - API Documents
      responses:
        200:
          description: |
            OK.
            Successful response if the api name exist.
          schema:
            $ref: '#/definitions/Document'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "specific mediation policy" resource APIs
  ######################################################
  '/apis/{apiId}/mediation-policies':

    #-----------------------------------------------------------------------------------------
    # Retrieving the list of all API specific mediation sequences under a given search condition
    #-----------------------------------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
          - apim:mediation_policy_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/mediation-policies"
      summary: |
        Get All Mediation Policies of an API
      operationId:  apisApiIdMediationPoliciesGet
      description: |
        This operation provides you a list of available mediation policies of an API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref : '#/parameters/limit'
        - $ref : '#/parameters/offset'
        - name : query
          in: query
          description: "-Not supported yet-"
          type: string
        - $ref : "#/parameters/If-None-Match"
      tags:
        - API Mediation Policies
      responses:
        200:
          description: |
            OK.
            List of qualifying APIs is returned.
          schema:
            $ref: '#/definitions/MediationList'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

    #----------------------------------------------------------------------------
    # Upload an API specific mediation policy
    #----------------------------------------------------------------------------
    post:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:mediation_policy_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: multipart/form-data" -F mediationPolicyFile=@TokenExchange.xml -F type=in "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/mediation-policies"
      summary: Add an API Specific Mediation Policy
      operationId: apisApiIdMediationPoliciesPost
      description: |
        This operation can be used to add an API specifc mediation policy.
      parameters:
        - in: formData
          name: mediationPolicyFile
          description: Mediation Policy to upload
          type: file
          required: false
        - in: formData
          name: inlineContent
          description: Inline content of the Mediation Policy
          type: string
          required: false
        - in: formData
          name: type
          description: Type of the mediation sequence
          required: true
          type: string
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Mediation Policies
      responses:
        201:
          description: |
            OK.
            mediation policy uploaded
          schema:
            $ref : '#/definitions/Mediation'
          headers:
            Location:
              description: |
                The URL of the uploaded mediation policy of the API.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ######################################################
  # The "Individual API specific mediation sequence" resource
  ######################################################
  /apis/{apiId}/mediation-policies/{mediationPolicyId}:

    #-----------------------------------------------------
    # Retrieve a particular API specific mediation sequence
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
          - apim:mediation_policy_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/mediation-policies/f56eb8b4-128c-45aa-ad35-9c87a546261a"
      summary: Get an API Specific Mediation Policy
      operationId:  apisApiIdMediationPoliciesMediationPolicyIdGet
      description: |
        This operation can be used to retrieve a particular API specific mediation policy.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/mediationPolicyId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Mediation Policy
      responses:
        200:
          description: |
            OK.
            Mediation policy returned.
          schema:
            $ref: '#/definitions/Mediation'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Delete the mediation policy
    #-----------------------------------------------------
    delete:
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:mediation_policy_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/mediation-policies/f56eb8b4-128c-45aa-ad35-9c87a546261a"
      summary: Delete an API Specific Mediation Policy
      operationId:  apisApiIdMediationPoliciesMediationPolicyIdDelete
      description: |
        This operation can be used to delete an existing API specific mediation policy providing the Id of the API and the Id of the mediation policy.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/mediationPolicyId'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Mediation Policy
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ###################################################################
  # The "Individual API specific mediation sequence content" resource
  ###################################################################
  /apis/{apiId}/mediation-policies/{mediationPolicyId}/content:

    #---------------------------------------------------------------
    # Retrieve a particular API specific mediation sequence content
    #---------------------------------------------------------------
    get:
      security:
      - OAuth2Security:
        - apim:api_view
        - apim:mediation_policy_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/mediation-policies/f56eb8b4-128c-45aa-ad35-9c87a546261a/content"
      summary: Download an API Specific Mediation Policy
      operationId:  apisApiIdMediationPoliciesMediationPolicyIdContentGet
      description: |
        This operation can be used to download a particular API specific mediation policy.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/mediationPolicyId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Mediation Policy
      responses:
        200:
          description: |
            OK.
            Mediation policy returned.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'

    #-----------------------------------------------------
    # Update a mediation policy
    #-----------------------------------------------------
    put:
      consumes:
        - multipart/form-data
      security:
      - OAuth2Security:
        - apim:api_create
        - apim:mediation_policy_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@TokenExchange.xml -F type=@type.txt "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/mediation-policies/f56eb8b4-128c-45aa-ad35-9c87a546261a/content"
      summary: Update an API Specific Mediation Policy
      operationId:  apisApiIdMediationPoliciesMediationPolicyIdContentPut
      description: |
        This operation can be used to update an existing mediation policy of an API.
      parameters:
        - in: formData
          name: file
          description: Mediation Policy to upload
          type: file
          required: false
        - in: formData
          name: inlineContent
          description: Inline content of the Mediation Policy
          type: string
          required: false
        - in: formData
          name: type
          description: Type of the mediation sequence(in/out/fault)
          required: true
          type: string
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/mediationPolicyId'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Mediation Policy
      responses:
        200:
          description: |
            OK.
            Successful response with updated API object
          schema:
            $ref: '#/definitions/Mediation'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ################################################################
  # The WSDL meta info resource of "APIs" resource APIs
  ################################################################

  /apis/{apiId}/wsdl-info:
    #-----------------------------------------------------
    # Retrieve the API's WSDL
    #-----------------------------------------------------
    get:
      produces:
        - application/json
      security:
        - OAuth2Security:
            - apim:api_view
      operationId: getWSDLInfoOfAPI
      summary: Get WSDL Meta Information
      description: |
        This operation can be used to retrieve the WSDL meta information of an API. It states whether the API is a SOAP
        API. If the API is a SOAP API, it states whether it has a single WSDL or a WSDL archive.
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/wsdl-info"
      parameters:
        - $ref: '#/parameters/apiId'
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            Requested WSDL meta information of the API is returned
          schema:
            $ref: '#/definitions/WSDLInfo'
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

################################################################
# The WSDL resource of "Individual API" resource APIs
################################################################

  /apis/{apiId}/wsdl:
    #-----------------------------------------------------
    # Retrieve the API's WSDL
    #-----------------------------------------------------
    get:
      produces:
        - application/json
        - application/wsdl
        - application/zip
      security:
        - OAuth2Security:
            - apim:api_view
      operationId: getWSDLOfAPI
      summary: Get WSDL definition
      description: |
        This operation can be used to retrieve the WSDL definition of an API. It can be either a single WSDL file or a WSDL archive.

        The type of the WSDL of the API is indicated at the "wsdlInfo" element of the API payload definition.
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/wsdl"
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            Requested WSDL document of the API is returned
          headers:
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Update the API's WSDL
    #-----------------------------------------------------
    put:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
            - apim:api_create
      operationId: updateWSDLOfAPI
      summary: Update WSDL Definition
      description: |
        This operation can be used to update the WSDL definition of an existing API. WSDL to be updated can be passed as either "url" or "file".
        Only one of "url" or "file" can be used at the same time. "file" can be specified as a single WSDL file or as a zip file which has a WSDL
        and its dependencies (eg: XSDs)
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -F file=@api.wsdl "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/wsdl"
      parameters:
        - $ref: '#/parameters/apiId'
        - in: formData
          name: file
          description: WSDL file or archive to upload
          type: file
          required: false
        - in: formData
          name: url
          description: WSDL Definition url
          type: string
          required: false
        - $ref: '#/parameters/If-Match'
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            Successful response with updated WSDL definition
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ######################################################
  # GraphQL "Query Complexity" resource APIs
  ######################################################
  /apis/{apiId}/graphql-policies/complexity:

    #-----------------------------------------------------
    # Retrieve Custom Complexity Info of a given API
    #-----------------------------------------------------
    get:
      summary: Get the Complexity Related Details of an API
      security:
        - OAuth2Security:
            - apim:api_create
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/graphql-policies/complexity"
      description: |
        This operation can be used to retrieve complexity related details belonging to an API by providing the API id.
      parameters:
        - $ref: '#/parameters/apiId'
      tags:
        - GraphQL Policies
      responses:
        200:
          description: |
            OK.
            Requested complexity details returned.
        404:
          $ref: '#/responses/NotFound'

    #-----------------------------------------------------
    # Update API specific Custom Complexity Info
    #-----------------------------------------------------
    put:
      summary: Update Complexity Related Details of an API
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/graphql-policies/complexity"
      security:
        - OAuth2Security:
            - apim:api_create
      description: |
        This operation can be used to update complexity details belonging to an API by providing the id of the API.
      parameters:
        - $ref: '#/parameters/apiId'
        - in: body
          name: body
          description: |
            Role-depth mapping that needs to be added
          required: true
          schema:
            $ref: '#/definitions/GraphQLQueryComplexityInfo'
      tags:
        - GraphQL Policies
      responses:
        200:
          description: |
            Created.
            Complexity details created successfully.
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # GraphQL Schema "Types and Fields" resource API
  ######################################################
  /apis/{apiId}/graphql-policies/complexity/types:

    #-----------------------------------------------------
    # Retrieve all types and fields of a GraphQL Schema
    #-----------------------------------------------------
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/graphql-policies/complexity/types"
      summary: Retrieve Types and Fields of a GraphQL Schema
      security:
        - OAuth2Security:
            - apim:api_create
            - apim:api_publish
      description: |
        This operation can be used to retrieve all types and fields of the GraphQL Schema by providing the API id.
      parameters:
        - $ref: '#/parameters/apiId'
      tags:
        - GraphQL Policies
      responses:
        200:
          description: |
            OK.
            Types and fields returned successfully.
          headers:
            Content-Type:
              description: |
                The content of the body.
              default: application/json
              type: string
          schema:
            $ref: '#/definitions/GraphQLSchemaTypeList'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "Resource Paths" resource
  ######################################################
  /apis/{apiId}/resource-paths:

    #-----------------------------------------------------
    # Retrieve a particular API specific Resource Paths
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/resource-paths"
      summary: Get Resource Paths of an API
      description: |
        This operation can be used to retrieve resource paths defined for a specific api.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - APIs
      responses:
        200:
          description: |
            OK.
            ResourcePaths returned.
          schema:
            $ref: '#/definitions/ResourcePathList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modified the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ######################################################
  # The Security Audit API List
  ######################################################
  /apis/{apiId}/auditapi:
    #-----------------------------------------------------
    # Retrieve the Security Audit Report of the Audit API
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/auditapi"
      summary: Retrieve the Security Audit Report of the Audit API
      description: |
        Retrieve the Security Audit Report of the Audit API
      parameters:
        - $ref: "#/parameters/Accept"
        - $ref: "#/parameters/apiId"
      tags:
        - API Audit
      responses:
        200:
          description: |
            OK.
            The Security Audit Report has been returned.
          headers:
            Content-Type:
              description: |
                The content of the body.
              default: application/json
              type: string
          schema:
            $ref: '#/definitions/AuditReport'
        404:
          $ref: '#/responses/NotFound'

######################################################
# The "ExternalStore Collection" resource APIs
######################################################

  /apis/{apiId}/external-stores:

    #-------------------------------------------------------------
    # Retrieve the published external stores list of a certain API
    #-------------------------------------------------------------
    get:
      operationId: getAllPublishedExternalStoresByAPI
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/external-stores"
      summary: Get the List of External Stores to which an API is Published
      description: |
        This operation can be used to retrieve a list of external stores which an API is published to by providing the id of the API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - External Stores
      responses:
        200:
          description: |
            OK.
            External Store list is returned.
          schema:
            $ref: '#/definitions/APIExternalStoreList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        500:
          $ref: '#/responses/InternalServerError'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "Publish to External Stores" resource APIs
  ######################################################
  /apis/{apiId}/publish-to-external-stores:

    #-----------------------------------------------------
    # Publish an API to external stores
    #-----------------------------------------------------
    post:
      operationId: publishAPIToExternalStores
      security:
        - OAuth2Security:
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/publish-to-external-stores?externalStoreId=Store123#"
      summary: Publish an API to External Stores
      description: |
        This operation can be used to publish an API to a list of external stores.
      parameters:
        - $ref: '#/parameters/apiId'
        - name: externalStoreIds
          type: string
          description: External Store Ids of stores which the API needs to be published or updated.
          in: query
          required: true
        - $ref: '#/parameters/If-Match'
      tags:
        - External Stores
      responses:
        200:
          description: |
            OK.
            API was successfully published to all the selected external stores.
          schema:
            $ref: '#/definitions/APIExternalStoreList'
          headers:
            ETag:
              description: |
                Entity Tag of the blocked subscription.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the subscription has been blocked.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        500:
          $ref: '#/responses/InternalServerError'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # Export Resource API
  ######################################################
  '/apis/export':
    #--------------------------------------------------------
    # Get an API as a Zip File
    #--------------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_publish
            - apim:api_create
      produces:
        - application/zip
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/export?apiId=96077508-fd01-4fae-bc64-5de0e2baf43c&name=PizzaShackAPI&version=1.0&provider=admin&format=YAML" > exportAPI.zip
      summary: Export an API
      description: |
        This operation can be used to export the details of a particular API as a zip file.
      parameters:
        - in: query
          name: apiId
          required: false
          type: string
          description: UUID of the API
        - name: name
          in: query
          description: |
            API Name
          required: false
          type: string
        - name: version
          in: query
          description: |
            Version of the API
          required: false
          type: string
        - name: providerName
          in: query
          description: |
            Provider name of the API
          required: false
          type: string
        - name: format
          in: query
          description: |
            Format of output documents. Can be YAML or JSON.
          type: string
          enum:
            - JSON
            - YAML
          required: false
        - name: preserveStatus
          in: query
          description: |
            Preserve API Status on export
          required: false
          type: boolean
      tags:
        - Import Export
      responses:
        200:
          description: |
            OK.
            Export Successful.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            type: file
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

######################################################
# The "Subscription Collection" resource APIs
######################################################
  /subscriptions:

    #-----------------------------------------------------
    # Retrieve all subscriptions of a certain API
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:subscription_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/subscriptions?apiId=96077508-fd01-4fae-bc64-5de0e2baf43c"
      summary: Get all Subscriptions
      description: |
        This operation can be used to retrieve a list of subscriptions of the user associated with the provided access token. This operation is capable of

        1. Retrieving all subscriptions for the user's APIs.
        `GET https://127.0.0.1:9443/api/am/publisher/v1/subscriptions`

        2. Retrieving subscriptions for a specific API.
        `GET https://127.0.0.1:9443/api/am/publisher/v1/subscriptions?apiId=c43a325c-260b-4302-81cb-768eafaa3aed`
      parameters:
        - $ref: '#/parameters/apiId-Q-Opt'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/If-None-Match'
        - name : query
          in: query
          description: |
            Keywords to filter subscriptions
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: |
            OK.
            Subscription list returned.
          schema:
            $ref: '#/definitions/SubscriptionList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

  ######################################################
  # The get usage billing resource APIs
  ######################################################
  '/subscriptions/{subscriptionId}/usage':
    get:
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/subscriptions/64eca60b-2e55-4c38-8603-e9e6bad7d809/usage"
      security:
        - OAuth2Security:
            - apim:subscription_view
      summary: Get Details of a Pending Invoice for a Monetized Subscription with Meterd Billing.
      description: |
        This operation can be used to get details of a pending invoice for a monetized subscription with meterd billing.
      parameters:
        - $ref: '#/parameters/subscriptionId'
      tags:
        - API Monetization
      responses:
        200:
          description: |
            OK.
            Details of a pending invoice returned.
          schema:
            $ref: '#/definitions/APIMonetizationUsage'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: 'Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).'
              type: string
            Last-Modified:
              description: 'Date and time the resource has been modified the last time. Used by caches, or in conditional requests (Will be supported in future).'
              type: string
        '304':
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        '404':
          description: |
            Not Found.
            Requested Subscription does not exist.
          schema:
            $ref: '#/definitions/Error'

  ######################################################
  # The get subscriber information
  ######################################################
  '/subscriptions/{subscriptionId}/subscriber-info':
    get:
      security:
        - OAuth2Security:
            - apim:subscription_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/subscriptions/64eca60b-2e55-4c38-8603-e9e6bad7d809/subscriber-info"
      summary: Get Details of a Subscriber
      description: |
        This operation can be used to get details of a user who subscribed to the API.
      parameters:
        - $ref: '#/parameters/subscriptionId'
      tags:
        - Subscriber
      responses:
        200:
          description: |
            OK.
             Details of the subscriber are returned.
          schema:
            $ref: '#/definitions/SubscriberInfo'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "Block Subscription" Processing Function resource API
  ######################################################
  /subscriptions/block-subscription:

    #-----------------------------------------------------
    # Block a certain subscription
    #-----------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:subscription_block
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/subscriptions/block-subscription?subscriptionId=64eca60b-2e55-4c38-8603-e9e6bad7d809&blockState=PROD_ONLY_BLOCKED"
      summary: Block a Subscription
      description: |
        This operation can be used to block a subscription. Along with the request, `blockState` must be specified as a query parameter.

        1. `BLOCKED` : Subscription is completely blocked for both Production and Sandbox environments.
        2. `PROD_ONLY_BLOCKED` : Subscription is blocked for Production environment only.
      parameters:
        - $ref: '#/parameters/subscriptionId-Q'
        - name: blockState
          in: query
          description: |
            Subscription block state.
          type: string
          required: true
          enum:
            - BLOCKED
            - PROD_ONLY_BLOCKED
        - $ref: '#/parameters/If-Match'
      tags:
        - Subscriptions
      responses:
        200:
          description: |
            OK.
            Subscription was blocked successfully.
          headers:
            ETag:
              description: |
                Entity Tag of the blocked subscription.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the subscription has been blocked.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ######################################################
  # The "Unblock Subscription" Processing Function resource API
  ######################################################
  /subscriptions/unblock-subscription:

    #-----------------------------------------------------
    # Unblock a certain subscription
    #-----------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:subscription_block
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/subscriptions/unblock-subscription?subscriptionId=64eca60b-2e55-4c38-8603-e9e6bad7d809"
      summary: Unblock a Subscription
      parameters:
        - $ref: '#/parameters/subscriptionId-Q'
        - $ref: '#/parameters/If-Match'
      description: |
        This operation can be used to unblock a subscription specifying the subscription Id. The subscription will be fully unblocked after performing this operation.
      tags:
        - Subscriptions
      responses:
        200:
          description: |
            OK.
            Subscription was unblocked successfully.
          headers:
            ETag:
              description: |
                Entity Tag of the unblocked subscription.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the subscription has been unblocked.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ######################################################
  # The "Tier Collection" resource APIs
  ######################################################
  '/throttling-policies/{policyLevel}':

    #-----------------------------------------------------
    # Retrieve the list of all available policies
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/throttling-policies/api"
      summary: Get All Throttling Policies for the Given Type
      operationId: getAllThrottlingPolicies
      description: |
        This operation can be used to list the available policies for a given policy level. Tier level should be specified as a path parameter and should be one of `subscription` and `api`.
        `subscription` is for Subscription Level policies and `api` is for Resource Level policies
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/policyLevel'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - Throttling Policies
      responses:
        200:
          description: |
            OK.
            List of policies returned.
          schema:
            $ref: '#/definitions/ThrottlingPolicyList'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

  ######################################################
  # The "Individual Tier" resource APIs
  ######################################################
  '/throttling-policies/{policyLevel}/{policyName}':

    #-----------------------------------------------------
    # Retrieve a certain policy
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/throttling-policies/api/Platinum"
      summary: Get Details of a Policy
      operationId: getThrottlingPolicyByName
      description: |
        This operation can be used to retrieve details of a single policy by specifying the policy level and policy name.
      parameters:
        - $ref: '#/parameters/policyName'
        - $ref: '#/parameters/policyLevel'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - Throttling Policies
      responses:
        200:
          description: |
            OK.
            Tier returned
          schema:
            $ref: '#/definitions/ThrottlingPolicy'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ######################################################
  # The "Global Mediation Policy" resource APIs
  ######################################################
  /mediation-policies:

    #-----------------------------------------------------------------------------------------
    # Retrieving the list of all global mediation sequences under a given search condition
    #-----------------------------------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
          - apim:mediation_policy_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/mediation-policies"
      summary: |
        Get all global level mediation policies
      operationId: getAllGlobalMediationPolicies
      description: |
        This operation provides you a list of available all global level mediation policies.
      parameters:
        - $ref : '#/parameters/limit'
        - $ref : '#/parameters/offset'
        - name : query
          in: query
          description: "-Not supported yet-"
          type: string
        - $ref : "#/parameters/If-None-Match"
      tags:
        - Global Mediation Policies
      responses:
        200:
          description: |
            OK.
            List of mediation policies is returned.
          schema:
            $ref: '#/definitions/MediationList'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

  ###################################################################
  # The "Individual Global mediation policy content" resource
  ###################################################################
  /mediation-policies/{mediationPolicyId}/content:

    #---------------------------------------------------------------
    # Retrieve a particular Global mediation sequence content
    #---------------------------------------------------------------
    get:
      security:
      - OAuth2Security:
        - apim:api_view
        - apim:mediation_policy_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/mediation-policies/d48a3412-1b85-49be-99f4-b81a3722ae73/content" > mediation.xml
      summary: Download a Global Mediation Policy
      operationId: getGlobalMediationPolicyContent
      description: |
        This operation can be used to download a particular global mediation policy.
      parameters:
        - $ref: '#/parameters/mediationPolicyId'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - Global Mediation Policy
      responses:
        200:
          description: |
            OK.
            Mediation policy returned.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "Certificate Management" resource APIs
  ######################################################

  /apis/{apiId}/client-certificates:
    #-------------------------------------------------------------------
    # Retrieve/ Search the uploaded certificates.
    #-------------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
          - apim:client_certificates_view
      produces:
        - application/json
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates?alias=wso2carbon"
      summary: Retrieve/ Search Uploaded Client Certificates
      description: |
        This operation can be used to retrieve and search the uploaded client certificates.
      tags:
        - Client Certificates
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - in: query
          name: alias
          required: false
          type: string
          description: Alias for the client certificate
        - in: path
          name: apiId
          required: true
          type: string
          description: UUID of the API
      responses:
        '200':
          description: >
            OK. Successful response with the list of matching certificate
            information in the body.
          schema:
            $ref: '#/definitions/ClientCertificates'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/InternalServerError'

    #-------------------------------------------------------------------
    # Upload client certificate resource api.
    #-------------------------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:client_certificates_add
      consumes:
        - multipart/form-data
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: multipart/form-data" -F certificate=@test.crt -F alias=wso2carbon -F apiId=fea749dd-d548-4a8b-b308-34903b39a34b -F tier=Gold "https://127.0.0.1:9443/api/am/publisher/v1/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates"
      summary: Upload a New Certificate
      description: |
        This operation can be used to upload a new certificate for an endpoint.
      parameters:
        - in: formData
          name: certificate
          description: The certificate that needs to be uploaded.
          required: true
          type: file
        - in: formData
          name: alias
          description: Alias for the certificate
          required: true
          type: string
        - in: path
          name: apiId
          description: apiId to which the certificate should be applied.
          required: true
          type: string
        - in: formData
          name: tier
          description: api tier to which the certificate should be applied.
          required: true
          type: string
      tags:
        - Client Certificates
      responses:
        '200':
          description: |
            OK.
            The Certificate added successfully.
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            $ref: '#/definitions/ClientCertMetadata'
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/InternalServerError'

  #-------------------------------------------------------------------
  # Update certificate resource.
  #-------------------------------------------------------------------
  /apis/{apiId}/client-certificates/{alias}:
    put:
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:client_certificates_update
      consumes:
        - multipart/form-data
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: multipart/form-data" -F certificate=@test.crt -F alias=wso2carbon -F apiId=fea749dd-d548-4a8b-b308-34903b39a34b -F tier=Gold "https://127.0.0.1:9443/api/am/publisher/v1/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates/wso2carbon"
      summary: Update a Certificate
      description: |
        This operation can be used to update an uploaded certificate.
      parameters:
        - in: formData
          name: certificate
          description: The certificate that needs to be uploaded.
          required: false
          type: file
        - in: path
          name: alias
          description: Alias for the certificate
          required: true
          type: string
        - in: formData
          name : tier
          description: The tier of the certificate
          required: false
          type: string
        - in: path
          name: apiId
          description: The api identifier
          required: true
          type: string
      tags:
        - Client Certificates
      responses:
        '200':
          description: |
            OK.
            The Certificate updated successfully.
          schema:
            $ref: '#/definitions/ClientCertMetadata'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

    #-------------------------------------------------------------------
    # Delete Certificate resource
    #-------------------------------------------------------------------
    delete:
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:client_certificates_update
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates/wso2carbon"
      summary: Delete a Certificate
      description: |
        This operation can be used to delete an uploaded certificate.
      parameters:
        - in: path
          name: alias
          description: |
            The alias of the certificate that should be deleted.
          required: true
          type: string
        - in: path
          name: apiId
          description: The api identifier
          required: true
          type: string
      tags:
        - Client Certificates
      responses:
        '200':
          description: |
            OK.
            The Certificate deleted successfully.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

    #-------------------------------------------------------------------
    # Get certificate information resource.
    #-------------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
          - apim:client_certificates_view
      produces:
        - application/json
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates/wso2carbon"
      summary: Get the Certificate Information
      description: |
        This operation can be used to get the information about a certificate.
      parameters:
        - in: path
          name: alias
          type: string
          required: true
        - in: path
          name: apiId
          description: The api identifier
          required: true
          type: string
      tags:
        - Client Certificates
      responses:
        '200':
          description: |
            OK.
          schema:
            $ref: '#/definitions/CertificateInfo'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

  #-------------------------------------------------------------------
  # Download the certificate which matches the alias.
  #-------------------------------------------------------------------
  /apis/{apiId}/client-certificates/{alias}/content:
    get:
      security:
        - OAuth2Security:
          - apim:api_view
          - apim:client_certificates_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/client-certificates/wso2carbon/content"
      summary: Download a Certificate
      description: |
        This operation can be used to download a certificate which matches the given alias.
      parameters:
        - in: path
          name: apiId
          description: The api identifier
          required: true
          type: string
        - in: path
          name: alias
          type: string
          required: true
      tags:
        - Client Certificates
      responses:
        '200':
          description: |
            OK.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

  ######################################################
  # The "Certificate Management" resource APIs
  ######################################################

  /endpoint-certificates:
    #-------------------------------------------------------------------
    # Retrieve/ Search the uploaded certificates.
    #-------------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
          - apim:ep_certificates_view
      produces:
        - application/json
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/endpoint-certificates?alias=wso2carbon&endpoint=www.abc.com"
      summary: Retrieve/Search Uploaded Certificates
      description: |
        This operation can be used to retrieve and search the uploaded certificates.
      tags:
        - Endpoint Certificates
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - in: query
          name: alias
          required: false
          type: string
          description: Alias for the certificate
        - in: query
          name: endpoint
          required: false
          type: string
          description: Endpoint of which the certificate is uploaded
      responses:
        '200':
          description: >
            OK. Successful response with the list of matching certificate
            information in the body.
          schema:
            $ref: '#/definitions/Certificates'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

    #-------------------------------------------------------------------
    # Upload certificate resource api.
    #-------------------------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:ep_certificates_add
      consumes:
        - multipart/form-data
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: multipart/form-data" -F certificate=@test.crt -F alias=alias -F "endpoint=endpoint=https://www.abc.com" "https://127.0.0.1:9443/api/am/publisher/v1/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/endpoint-certificates"
      summary: Upload a new Certificate.
      description: |
        This operation can be used to upload a new certificate for an endpoint.
      parameters:
        - in: formData
          name: certificate
          description: The certificate that needs to be uploaded.
          required: true
          type: file
        - in: formData
          name: alias
          description: Alias for the certificate
          required: true
          type: string
        - in: formData
          name: endpoint
          description: Endpoint to which the certificate should be applied.
          required: true
          type: string
      tags:
        - Endpoint Certificates
      responses:
        '200':
          description: |
            OK.
            The Certificate added successfully.
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            $ref: '#/definitions/CertMetadata'
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/InternalServerError'

  #-------------------------------------------------------------------
  # Update certificate resource.
  #-------------------------------------------------------------------
  /endpoint-certificates/{alias}:
    put:
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:ep_certificates_update
      consumes:
        - multipart/form-data
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: multipart/form-data" -F certificate=@test.crt "https://127.0.0.1:9443/api/am/publisher/v1/apis/d48a3412-1b85-49be-99f4-b81a3722ae73/endpoint-certificates/wso2carbon"
      summary: Update a certificate.
      description: |
        This operation can be used to update an uploaded certificate.
      parameters:
        - in: formData
          name: certificate
          description: The certificate that needs to be uploaded.
          required: true
          type: file
        - in: path
          name: alias
          description: Alias for the certificate
          required: true
          type: string
      tags:
        - Endpoint Certificates
      responses:
        '200':
          description: |
            OK.
            The Certificate updated successfully.
          schema:
            $ref: '#/definitions/CertMetadata'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

    #-------------------------------------------------------------------
    # Delete Certificate resource
    #-------------------------------------------------------------------
    delete:
      security:
        - OAuth2Security:
          - apim:api_create
          - apim:ep_certificates_update
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/endpoint-certificates/wso2carbon"
      summary: Delete a certificate.
      description: |
        This operation can be used to delete an uploaded certificate.
      parameters:
        - in: path
          name: alias
          description: |
            The alias of the certificate that should be deleted.
          required: true
          type: string
      tags:
        - Endpoint Certificates
      responses:
        '200':
          description: |
            OK.
            The Certificate deleted successfully.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

    #-------------------------------------------------------------------
    # Get certificate information resource.
    #-------------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
          - apim:ep_certificates_view
      produces:
        - application/json
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/endpoint-certificates/wso2carbon"
      summary: Get the Certificate Information
      description: |
        This operation can be used to get the information about a certificate.
      parameters:
        - in: path
          name: alias
          type: string
          required: true
      tags:
        - Endpoint Certificates
      responses:
        '200':
          description: |
            OK.
          schema:
            $ref: '#/definitions/CertificateInfo'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

  #-------------------------------------------------------------------
  # Download the certificate which matches the alias.
  #-------------------------------------------------------------------
  /endpoint-certificates/{alias}/content:
    get:
      security:
        - OAuth2Security:
          - apim:api_view
          - apim:ep_certificates_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/endpoint-certificates/wso2carbon/content"
      summary: Download a Certificate
      description: |
        This operation can be used to download a certificate which matches the given alias.
      parameters:
        - in: path
          name: alias
          type: string
          required: true
      tags:
        - Endpoint Certificates
      responses:
        '200':
          description: |
            OK.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

  ######################################################
  # The "Content Search Results" resource APIs
  ######################################################
  /search:

    #-----------------------------------------------------
    # Retrieve the matching results
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
            - apim:api_import_export
            - apim:api_product_import_export
      produces:
        - application/json
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/search?query=pizza"
      summary: |
        Retrieve/Search APIs and API Documents by Content
      description: |
        This operation provides you a list of available APIs and API Documents qualifying the given keyword match.
      parameters:
        - $ref : '#/parameters/limit'
        - $ref : '#/parameters/offset'
        - name : query
          in: query
          description: |
            **Search**.

            You can search by proving a keyword.

          type: string
        - $ref : "#/parameters/If-None-Match"
      tags:
        - Unified Search
      responses:
        200:
          description: |
            OK.
            List of qualifying APIs and API documents is returned.
          schema:
            $ref: '#/definitions/SearchResultList'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

    ######################################################
    # The "API Product" resource APIs
    ######################################################
    #-----------------------------------------------------
    # Retrieving the list of all API Products qualifying under a given search condition
    #-----------------------------------------------------
  /api-products:
    #-----------------------------------------------------
    # get API Product -API Product (Collection)
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/api-products?query=PizzaAPIProduct"
      summary: |
        Retrieve/Search API Products
      description: |
        This operation provides you a list of available API Products qualifying under a given search condition.

        Each retrieved API Product is represented with a minimal amount of attributes. If you want to get complete details of an API Product, you need to use **Get details of an API Product** operation.
      parameters:
        - $ref : '#/parameters/limit'
        - $ref : '#/parameters/offset'
        - name : query
          in: query
          description: |
          type: string
        - $ref : "#/parameters/Accept"
        - $ref : "#/parameters/If-None-Match"
      tags:
        - API Products
      responses:
        200:
          description: |
            OK.
            List of qualifying API Products is returned.
          schema:
            $ref: '#/definitions/APIProductList'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Create a new API Product -API Product (Individual)
    #-----------------------------------------------------
    post:
      security:
        - OAuth2Security:
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/api-products"
      summary: Create a New API Product
      description: |
        This operation can be used to create a new API Product specifying the details of the API Product in the payload.
      parameters:
        - in: body
          name: body
          description: |
            API object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/APIProduct'
      tags:
        - API Products
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/APIProduct'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          $ref: '#/responses/UnsupportedMediaType'

  /api-products/{apiProductId}:
    delete:
      security:
        - OAuth2Security:
            - apim:api_publish
            - apim:api_product_import_export
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33"
      summary: Delete an API Product
      description: |
        This operation can be used to delete an existing API Product proving the Id of the API Product.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Products
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

    #-----------------------------------------------------
    # Retrieve the details of an API definition
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33"
      summary: Get Details of an API Product
      description: |
        Using this operation, you can retrieve complete details of a single API Product. You need to provide the Id of the API to retrive it.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Products
      responses:
        200:
          description: |
            OK.
            Requested API Product is returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
          schema:
            $ref: '#/definitions/APIProduct'
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Update the definition of an API product
    #-----------------------------------------------------
    put:
      security:
        - OAuth2Security:
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33"
      summary: Update an API Product
      description: |
        This operation can be used to update an existing API product.
        But the properties `name`, `provider` and `version` cannot be changed.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - in: body
          name: body
          description: |
            API object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/APIProduct'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Products
      responses:
        200:
          description: |
            OK.
            Successful response with updated API product object
          schema:
            $ref: '#/definitions/APIProduct'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        403:
          $ref: '#/responses/Forbidden'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  /api-products/{apiProductId}/thumbnail:
    #-------------------------------------------------------------------------------------------------
    # Downloads a thumbnail image of an API Product
    #-------------------------------------------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33/thumbnail" > image.jpeg
      summary: Get Thumbnail Image
      description: |
        This operation can be used to download a thumbnail image of an API product.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Products
      responses:
        200:
          description: |
            OK.
            Thumbnail image returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #----------------------------------------------------------------------------
    # Upload a thumbnail image to a certain API Product
    #----------------------------------------------------------------------------
    put:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: multipart/form-data" -F file=@image.jpeg "https://127.0.0.1:9443/api/am/publisher/v1/api-products/d48a3412-1b85-49be-99f4-b81a3722ae73/thumbnail"
      summary: Upload a Thumbnail Image
      description: |
        This operation can be used to upload a thumbnail image of an API Product. The thumbnail to be uploaded should be given as a form data parameter `file`.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - in: formData
          name: file
          description: Image to upload
          type: file
          required: true
        - $ref: '#/parameters/If-Match'
      tags:
        - API Products
      responses:
        200:
          description: |
            OK.
            Image updated
          schema:
            $ref : '#/definitions/FileInfo'
          headers:
            Location:
              description: |
                The URL of the uploaded thumbnail image of the API Product.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'
          
  ################################################################
  # The swagger resource of "Individual API" resource APIs
  ################################################################

  /api-products/{apiProductId}/swagger:
    #-----------------------------------------------------
    # Retrieve the API swagger definition
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33/swagger"
      summary: Get Swagger Definition
      description: |
        This operation can be used to retrieve the swagger definition of an API.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Products
      responses:
        200:
          description: |
            OK.
            Requested swagger document of the API is returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ###########################################################
  # Resource for checking if a given API Product is outdated
  ###########################################################

  /api-products/{apiProductId}/is-outdated:
    #----------------------------------------------------------------------------------------------------------
    # Retrieves the status indicating if an API Product is outdated due to updating of dependent APIs
    #----------------------------------------------------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_publish
      summary: Check Whether API Product is Outdated
      description: |
        This operation can be used to retrieve the status indicating if an API Product is outdated due to updating of dependent APIs (This resource is not supported at the moment)
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Products
      responses:
        200:
          description: |
            OK.
            Requested swagger document of the API is returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
          schema:
            $ref: '#/definitions/APIProductOutdatedStatus'
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ######################################################
  # The "Document Collection" resource API Product
  ######################################################
  /api-products/{apiProductId}/documents:

    #-----------------------------------------------------
    # Retrieve the documents associated with an API Product that qualify under a search condition
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents"
      summary: Get a List of Documents of an API Product
      description: |
        This operation can be used to retrive a list of documents belonging to an API Product by providing the id of the API Product.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Product Documents
      responses:
        200:
          description: |
            OK.
            Document list is returned.
          schema:
            $ref: '#/definitions/DocumentList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Add a document to a certain API
    #-----------------------------------------------------
    post:
      security:
        - OAuth2Security:
          - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents"
      summary: Add a New Document to an API Product
      description: |
        This operation can be used to add a new documentation to an API Product. This operation only adds the metadata of a document. To add the actual content we need to use **Upload the content of an API Product document ** API once we obtain a document Id by this operation.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - in: body
          name: body
          description: |
            Document object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Document'
      tags:
        - API Product Documents
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created Document object as entity in the body.
            Location header contains URL of newly added document.
          schema:
            $ref: '#/definitions/Document'
          headers:
            Location:
              description: |
                Location to the newly created Document.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          $ref: '#/responses/UnsupportedMediaType'

  ######################################################
  # The "Individual Document" resource APIs
  ######################################################
  /api-products/{apiProductId}/documents/{documentId}:

    #-----------------------------------------------------
    # Retrieve a particular document of a certain API
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents/83312daf-0d8a-427b-8f72-12755b7901d3"
      summary: Get a Document of an API Product
      description: |
        This operation can be used to retrieve a particular document's metadata associated with an API.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/documentId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Product Documents
      responses:
        200:
          description: |
            OK.
            Document returned.
          schema:
            $ref: '#/definitions/Document'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #-----------------------------------------------------
    # Update a particular document of a certain API Product
    #-----------------------------------------------------
    put:
      security:
        - OAuth2Security:

          - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents/83312daf-0d8a-427b-8f72-12755b7901d3"
      summary: Update a Document of an API Product
      description: |
        This operation can be used to update metadata of an API's document.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/documentId'
        - in: body
          name: body
          description: |
            Document object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Document'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Product Documents
      responses:
        200:
          description: |
            OK.
            Document updated
          schema:
            $ref: '#/definitions/Document'
          headers:
            Location:
              description: |
                The URL of the updated document.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

    #-----------------------------------------------------
    # Delete a particular document of a certain API Product
    #-----------------------------------------------------
    delete:
      security:
        - OAuth2Security:
          - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents/83312daf-0d8a-427b-8f72-12755b7901d3"
      summary: Delete a Document of an API Product
      description: |
        This operation can be used to delete a document associated with an API Product.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/documentId'
        - $ref: '#/parameters/If-Match'
      tags:
        - API Product Documents
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ################################################################
  # The content resource of "Individual Document" resource APIs
  ################################################################

  '/api-products/{apiProductId}/documents/{documentId}/content':

    #-------------------------------------------------------------------------------------------------
    # Downloads a FILE type document/get the inline content or source url of a certain document
    #-------------------------------------------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents/83312daf-0d8a-427b-8f72-12755b7901d3/content"
      summary: Get the Content of an API Product Document
      description: |
        This operation can be used to retrive the content of an API's document.

        The document can be of 3 types. In each cases responses are different.

        1. **Inline type**:
           The content of the document will be retrieved in `text/plain` content type

           _Sample cURL_ : `curl -k -H "Authorization:Bearer 579f0af4-37be-35c7-81a4-f1f1e9ee7c51" -F inlineContent=@"docs.txt" -X POST "https://localhost:9443/api/am/publisher/v1/apis/995a4972-3178-4b17-a374-756e0e19127c/documents/43c2bcce-60e7-405f-bc36-e39c0c5e189e/content`
        2. **FILE type**:
           The file will be downloaded with the related content type (eg. `application/pdf`)
        3. **URL type**:
            The client will recieve the URL of the document as the Location header with the response with - `303 See Other`
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/documentId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
      tags:
        - API Product Documents
      responses:
        200:
          description: |
            OK.
            File or inline content returned.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        303:
          description: |
            See Other.
            Source can be retrived from the URL specified at the Location header.
          headers:
            Location:
              description: |
                The Source URL of the document.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

    #----------------------------------------------------------------------------
    # Upload a file or add inline content to a document of a certain API Product
    #----------------------------------------------------------------------------
    post:
      consumes:
        - multipart/form-data
      security:
        - OAuth2Security:
          - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: multipart/form-data" -F file=@sample.pdf "https://127.0.0.1:9443/api/am/publisher/v1/api-products/5bca47e1-8233-46a5-9295-525dca337f33/documents/83312daf-0d8a-427b-8f72-12755b7901d3/content"
      summary: Upload the Content of an API Product Document
      description: |
        Thid operation can be used to upload a file or add inline content to an API Product document.

        **IMPORTANT:**
        * Either **file** or **inlineContent** form data parameters should be specified at one time.
        * Document's source type should be **FILE** in order to upload a file to the document using **file** parameter.
        * Document's source type should be **INLINE** in order to add inline content to the document using **inlineContent** parameter.
      parameters:
        - $ref: '#/parameters/apiProductId'
        - $ref: '#/parameters/documentId'
        - in: formData
          name: file
          description: Document to upload
          type: file
          required: false
        - in: formData
          name: inlineContent
          description: Inline content of the document
          type: string
          required: false
        - $ref: '#/parameters/If-Match'
      tags:
        - API Product Documents
      responses:
        200:
          description: |
            OK.
            Document updated
          schema:
            $ref: '#/definitions/Document'
          headers:
            Location:
              description: |
                The URL of the updated content of the document.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        412:
          $ref: '#/responses/PreconditionFailed'

  ######################################################
  # Check role existence in user-store
  ######################################################
  /roles/{roleId}:
    #-----------------------------------------------------
    # The role name existence check resource
    #-----------------------------------------------------
    head:
      security:
        - OAuth2Security:
            - apim:api_create
            - apim:api_publish
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -I -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/roles/SW50ZXJuYWwvcHVibGlzaGVyCQ"
      operationId: validateSystemRole
      summary:
        Check Whether Given Role Name already Exist
      description: |
        Using this operation, user can check a given role name exists or not.
      parameters:
        - $ref : '#/parameters/roleId'
      tags:
        - Roles
      responses:
        200:
          description:
            OK.
            Requested role name exists.
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # Check role existence for the logged-in user
  ######################################################
  /me/roles/{roleId}:
    #-----------------------------------------------------
    # Validate role against logged-in user
    #-----------------------------------------------------
    head:
      security:
        - OAuth2Security:
            - apim:api_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -I -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/me/roles/SW50ZXJuYWwvcHVibGlzaGVyCQ"
      operationId: validateUserRole
      summary:
        Validate Whether the Logged-in User has the Given Role
      description: |
        Using this operation, logged-in user can check whether he has given role.
      parameters:
        - $ref : '#/parameters/roleId'
      tags:
        - Roles
      responses:
        200:
          description:
            OK.
            Requested user has the role.
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The External Store list to publish an API
  ######################################################
  /external-stores:
    #-----------------------------------------------------
    # Retrieve configured external store list
    #-----------------------------------------------------
    get:
      operationId: getAllExternalStores
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/external-stores"
      summary: Retrieve External Stores List to Publish an API
      tags:
        - External Stores
      description: |
        Retrieve external stores list configured to publish an API
      responses:
        200:
          description: |
            OK.
            External Stores list returned
          schema:
            $ref: '#/definitions/ExternalStore'
        500:
          $ref: '#/responses/InternalServerError'

  ######################################################
  # The Publisher settings List
  ######################################################
  /settings:
    #-----------------------------------------------------
    # Retrieve publisher settings
    #-----------------------------------------------------
    get:
      summary: Retreive Publisher Settings
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/settings"
      security:
        - OAuth2Security:
            - apim:publisher_settings
      description: |
        Retreive publisher settings
      tags:
        - Settings
      responses:
        200:
          description: |
            OK.
            Settings returned
          schema:
            $ref: '#/definitions/Settings'
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "Environment Collection" resource API
  ######################################################
  /settings/gateway-environments:

    #-----------------------------------------------------
    # Retrieve the list of environments configured for a certain API
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
          - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/settings/gateway-environments"
      summary: Get All Gateway Environments
      description: |
        This operation can be used to retrieve the list of gateway environments available.
      parameters:
        - $ref: '#/parameters/apiId-Q'
      tags:
        - Settings
      responses:
        200:
          description: |
            OK.
            Environment list is returned.
          schema:
            $ref: '#/definitions/EnvironmentList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The tenant resource APIs
  ######################################################
  '/tenants':
    #--------------------------------------------------------
    # Retrieve tenants by state
    #--------------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/tenants?state=active"
      summary: |
        Get Tenants by State
      description: |
        This operation is to get tenants by state
      operationId: getTenantsByState
      parameters:
        - name: state
          description: |
            The state represents the current state of the tenant

            Supported states are [active, inactive]

          in: query
          type: string
          required: false
          default: 'active'
          enum:
            - active
            - inactive
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      tags:
        - Tenants
      responses:
        200:
          description: |
            OK.
            Tenant names returned.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            $ref: '#/definitions/TenantList'
        404:
          $ref: '#/responses/NotFound'
        406:
          $ref: '#/responses/NotAcceptable'

  ####################################################
  # Publisher Alerts management REST API
  ####################################################
  '/alert-types':
    #--------------------------------------------------
    # Retrieve the list of api store alert types.
    #--------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:pub_alert_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/alert-types"
      operationId: getPublisherAlertTypes
      summary: |
        Get the list of API Publisher alert types.
      description: |
        This operation is used to get the list of supportd alert types for the 'publisher' agent.
      tags:
        - Alerts
      responses:
        200:
          description: |
            OK.
            The list of publisher alert types are returned.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            $ref: '#/definitions/AlertTypesList'
        500:
          $ref: '#/responses/InternalServerError'

  '/alert-subscriptions':
    #--------------------------------------------------
    # Retrieve the list of alerts subscribed by the user.
    #--------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:pub_alert_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/alert-subscriptions"
      summary: |
        Get the List of API Publisher Alert Types Subscribed by the User
      operationId: getSubscribedAlertTypes
      description: |
        This operation is used to get the list of subscribed alert types by the user.
      tags:
        - Alert Subscriptions
      responses:
        200:
          description: |
            OK.
            The list of subscribed alert types are returned.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            $ref: '#/definitions/AlertsInfo'
        500:
          $ref: '#/responses/InternalServerError'

    #--------------------------------------------------
    # Subscribe to the selected alert types by the user.
    #--------------------------------------------------
    put:
      security:
        - OAuth2Security:
            - apim:pub_alert_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/alert-subscriptions"
      summary: |
        Subscribe to the Selected Tlert types by the User
      operationId: subscribeToAlerts
      description: |
        This operation is used to get the list of subscribed alert types by the user.
      parameters:
        - in: body
          name: body
          description:
            The alerts list and the email list to subscribe.
          required: true
          schema:
            $ref: '#/definitions/AlertsInfo'
      tags:
        - Alert Subscriptions
      responses:
        201:
          description: |
            OK.
            Successful response with the newly subscribed alerts.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            $ref: '#/definitions/AlertsInfoResponse'
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/InternalServerError'

    #--------------------------------------------------
    # Unsubscribe the user from all the alerts types
    #--------------------------------------------------
    delete:
      security:
        - OAuth2Security:
            - apim:pub_alert_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/alert-subscriptions"
      summary: |
        Unsubscribe User from All the Alert Types
      operationId: unsubscribeAllAlerts
      description: |
        This operation is used to unsubscribe the respective user from all the alert types.
      tags:
        - Alert Subscriptions
      responses:
        200:
          description: |
            OK.
            The user is unsubscribed from the alerts successfully.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        500:
          $ref: '#/responses/InternalServerError'

  ##################################################
  # Alert configuration api
  #################################################
  '/alerts/{alertType}/configurations':
    #----------------------------------------------
    # Get the alert configs
    #----------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:pub_alert_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/alerts/{alertType}/configurations"
      summary: |
        Get All AbnormalRequestsPerMin Alert Configurations
      operationId: getAllAlertConfigs
      description: |
        This operation is used to get all configurations of the AbnormalRequestsPerMin alert type.
      tags:
        - Alert Configuration
      parameters:
        - $ref: '#/parameters/alertType'
      responses:
        200:
          description: |
            OK.
            The store alert configuration.
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
          schema:
            $ref: '#/definitions/AlertConfigList'
        500:
          $ref: '#/responses/InternalServerError'

  '/alerts/{alertType}/configurations/{configurationId}':
    #----------------------------------------------
    # Add alert config
    #----------------------------------------------
    put:
      security:
        - OAuth2Security:
            - apim:pub_alert_manage
      summary: |
        Add AbnormalRequestsPerMin Alert Configurations.
      operationId: addAlertConfig
      description: |
        This operation is used to add configuration for the AbnormalRequestsPerMin alert type.
      parameters:
        - $ref: '#/parameters/alertType'
        - $ref: '#/parameters/configurationId'
        - in: body
          name: body
          description:
            Configuration for AbnormalRequestCount alert type
          required: true
          schema:
            $ref: '#/definitions/AlertConfigInfo'
      tags:
        - Alert Configuration
      responses:
        201:
          description: |
            Created.
            Successful response with newly created object as entity.
            Location header contains URL of newly created entity.
          headers:
            Location:
              description: |
                The location of the newly created entity.
              type: string
          schema:
            $ref: '#/definitions/AlertConfig'
        400:
          $ref: '#/responses/BadRequest'
        500:
          $ref: '#/responses/InternalServerError'

    #----------------------------------------------
    # Delete alert configuration
    #----------------------------------------------
    delete:
      security:
        - OAuth2Security:
            - apim:pub_alert_manage
      summary: |
        Delete the Selected Configuration from AbnormalRequestsPerMin Alert Type.
      operationId: deleteAlertConfig
      description: |
        This operation is used to delete configuration from the AbnormalRequestsPerMin alert type.
      parameters:
        - $ref: '#/parameters/alertType'
        - $ref: '#/parameters/configurationId'
      tags:
        - Alert Configuration
      responses:
        200:
          description: |
            OK.
            The alert config is deleted successfully.
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

  ######################################################
  # Check tenant existence
  ######################################################
  /tenants/{tenantDomain}:
    #-----------------------------------------------------
    # The tenant existence check resource
    #-----------------------------------------------------
    head:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -I -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/tenants/wso2.com"
      summary:
        Check Whether the Given Tenant already Exists
      description: |
        Using this operation, user can check whether a given tenant exists or not.
      operationId: getTenantExistence
      parameters:
        - $ref : '#/parameters/tenantDomain'
      tags:
        - Tenants
      responses:
        200:
          description:
            OK.
            Requested tenant exists.
        404:
          $ref: '#/responses/NotFound'

  ####################################################
  # The "Label" resource API
  ######################################################
  /labels:

    #-----------------------------------------------------
    # Retrieve all labels
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/labels"
      summary: Get all Registered Labels
      description: |
        Get all registered Labels
      tags:
        - Label Collection
      responses:
        200:
          description: |
            OK.
            Labels returned
          schema:
            $ref: '#/definitions/LabelList'

######################################################
# The "Category" resource API
######################################################
  /api-categories:

#-----------------------------------------------------
# Retrieve all categories
#-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/api-categories"
      summary: Get all API categories
      description: |
        Get all API categories
      tags:
        - API Category (Collection)
      responses:
        200:
          description: |
            OK.
            Categories returned
          schema:
            $ref: '#/definitions/APICategoryList'

######################################################
# The "Scopes" resource APIs
######################################################
  /scopes:

  #-------------------------------------------------------------
  # Retrieve the Shared Scopes list
  #-------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      description: |
        This operation can be used to get all the available Shared Scopes.
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/scopes"
      summary: Get All Available Shared Scopes
      operationId: getSharedScopes
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      tags:
        - Scopes
      responses:
        200:
          description: |
            OK.
            Shared Scope list is returned.
          schema:
            $ref: '#/definitions/ScopeList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        500:
          $ref: '#/responses/InternalServerError'

  #-------------------------------------------------------------
  # Create a new Shared Scope
  #-------------------------------------------------------------
    post:
      security:
        - OAuth2Security:
            - apim:shared_scope_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X POST -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/scopes"
      summary: Add a New Shared Scope
      description: |
        This operation can be used to add a new Shared Scope.
      operationId: addSharedScope
      tags:
        - Scopes
      parameters:
        - in: body
          name: body
          description: |
            Scope object that needs to be added
          required: true
          schema:
            $ref: '#/definitions/Scope'
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created Scope object as an entity in the body.
          schema:
            $ref: '#/definitions/Scope'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        415:
          $ref: '#/responses/UnsupportedMediaType'

######################################################
# The "Individual Shared Scope" resource APIs
######################################################
  /scopes/{scopeId}:

  #-------------------------------------------------------------
  # Retrieve the details of a Shared Scope
  #-------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/scopes/01234567-0123-0123-0123-012345678901"
      summary: Get a Shared Scope by Scope Id
      description: |
        This operation can be used to retrieve details of a Shared Scope by a given scope Id.
      operationId: getSharedScope
      tags:
        - Scopes
      parameters:
        - $ref: '#/parameters/scopeId'
      responses:
        200:
          description: |
            OK.
            Requested Shared Scope is returned.
          schema:
            $ref: '#/definitions/Scope'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        404:
          $ref: '#/responses/NotFound'

  #-------------------------------------------------------------
  # Update a shared scope
  #-------------------------------------------------------------
    put:
      security:
        - OAuth2Security:
            - apim:shared_scope_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X PUT -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" -H "Content-Type: application/json" -d @data.json "https://127.0.0.1:9443/api/am/publisher/v1/scopes/01234567-0123-0123-0123-012345678901"
      summary: Update a Shared Scope
      description: |
        This operation can be used to update a Shared Scope by a given scope Id.
      operationId: updateSharedScope
      tags:
        - Scopes
      parameters:
        - $ref: '#/parameters/scopeId'
        - in: body
          name: body
          description: |
            Scope object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Scope'
      responses:
        200:
          description: |
            OK.
            Successful response with updated Scope object
          schema:
            $ref: '#/definitions/Scope'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'

  #-----------------------------------------------------
  # Delete the shared scope
  #-----------------------------------------------------
    delete:
      security:
        - OAuth2Security:
            - apim:shared_scope_manage
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -X DELETE -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/scopes/01234567-0123-0123-0123-012345678901"
      summary: Delete a Shared Scope
      description: |
        This operation can be used to delete a Shared Scope proving the Id of the scope.
      operationId: deleteSharedScope
      tags:
        - Scopes
      parameters:
        - $ref: '#/parameters/scopeId'
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          $ref: '#/responses/NotFound'

  #-----------------------------------------------------
  # The scope name existence check resource
  #-----------------------------------------------------
    head:
      security:
        - OAuth2Security:
            - apim:api_create
            - apim:api_publish
      operationId: validateScope
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -I -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/scopes/YXBpbTphcGlfdmlldw"
      summary:
        Check Given Scope Name already Exists
      description: |
        Using this operation, user can check a given scope name exists or not.
      parameters:
        - $ref : '#/parameters/scopeName'
      tags:
        - Scopes
      responses:
        200:
          description:
            OK.
            Requested scope name exists.
        404:
          $ref: '#/responses/NotFound'

  /scopes/{scopeId}/usage:

  #-------------------------------------------------------------
  # Retrieve the usages of a Shared Scope
  #-------------------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/scopes/01234567-0123-0123-0123-012345678901/usage"
      summary: Get usages of a Shared Scope by Scope Id
      description: |
        This operation can be used to retrieve usages of a Shared Scope by a given scope Id.
      operationId: getSharedScopeUsages
      tags:
        - Scopes
      parameters:
        - $ref: '#/parameters/scopeId'
      responses:
        200:
          description: |
            OK.
            Usages of the shared scope is returned.
          schema:
            $ref: '#/definitions/SharedScopeUsage'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        404:
          $ref: '#/responses/NotFound'

  ######################################################
  # The "KEY MANAGER" resource API
  ######################################################
  /key-managers:

    #-----------------------------------------------------
    # Retrieve all Key Managers
    #-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_create
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/key-managers"
      summary: Get All Key Managers
      description: |
        Get all Key managers
      tags:
        - Key Managers (Collection)
      responses:
        200:
          description: |
            OK.
            Categories returned
          schema:
            $ref: '#/definitions/KeyManagerList'

######################################################
# The "Deployments" resource APIs
######################################################

  /deployments:
    #----------------------------------------------------------
    # Retrieving the deployments details from tenant-conf.json
    #----------------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      produces:
        - application/json
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/deployments"
      summary: Retrieve Deployment Environments Details
      operationId: deploymentsGet
      description: |
        This operation can be used to retrieve cloud clusters information defines in tenant-conf.json file.

        With that you can deploy an API to selected cloud environments.
      tags:
        - Deployments
      responses:
        '200':
          description: >
            OK. Successful response with the list of deployment environments
            information in the body.
          schema:
            $ref: '#/definitions/DeploymentList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

######################################################
# The "deployments status per API" resource APIs
######################################################
  /apis/{apiId}/deployments:
#-----------------------------------------------------
# Retrieve the deployment details of an API
#-----------------------------------------------------
    get:
      security:
        - OAuth2Security:
            - apim:api_view
      produces:
        - application/json
      x-code-samples:
        - lang: Curl
          source: |-
            curl -k -H "Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8" "https://127.0.0.1:9443/api/am/publisher/v1/apis/92bc1330-1848-4fe8-b992-c792186c212e/deployments/"
      summary: Retrieve Deployment Status Details
      operationId: deploymentsGetStatus
      description: |
        This operation can be used to retrieve the status of deployments in cloud clusters.

        With that you can get the status of the deployed APIs in cloud environments.
      parameters:
        - $ref: '#/parameters/apiId'
      tags:
        - DeploymentStatus
      responses:
        '200':
          description: >
            OK. Successful response with the list of deployment environments
            information in the body.
          schema:
            $ref: '#/definitions/DeploymentStatusList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/InternalServerError'

######################################################
# Parameters - required by some of the APIs above
######################################################
parameters:

  # API Identifier
  # Specified as part of the path expression
  apiId:
    name: apiId
    in: path
    description: |
      **API ID** consisting of the **UUID** of the API.
    required: true
    type: string
  # API Identifier
  # Specified as part of the path expression
  endpointId:
    name: endpointId
    in: path
    description: |
      **Endpoint ID** consisting of the **UUID** of the Endpoint**.
    required: true
    type: string
  # API Identifier
  # Specified as part of the query string
  apiId-Q:
    name: apiId
    in: query
    description: |
      **API ID** consisting of the **UUID** of the API.
      The combination of the provider of the API, name of the API and the version is also accepted as a valid API I.
      Should be formatted as **provider-name-version**.
    required: true
    type: string

  # API Identifier
  # Specified as part of the query string
  apiId-Q-Opt:
    name: apiId
    in: query
    description: |
      **API ID** consisting of the **UUID** of the API.
      The combination of the provider of the API, name of the API and the version is also accepted as a valid API I.
      Should be formatted as **provider-name-version**.
    required: false
    type: string

  # Label Type
  # Specified as part of the query string
  labelType-Q:
    name: labelType
    in: query
    description: |
      **API ID** consisting of the **UUID** of the API.
      The combination of the provider of the API, name of the API and the version is also accepted as a valid API I.
      Should be formatted as **provider-name-version**.
    required: false
    type: string


  # API name
  # Specified as part of the query string
  name:
    name: name
    in: path
    description: |
      Name of the API
    required: true
    type: string

  # API version
  # Specified as part of the query string
  version:
    name: version
    in: path
    description: |
      Version of the API
    required: true
    type: string

  # Document Identifier
  # Specified as part of the path expression
  documentId:
    name: documentId
    in: path
    description: |
      Document Identifier
    required: true
    type: string

  # Application Identifier
  # Specified as part of the path expression
  applicationId:
    name: applicationId
    in: path
    description: |
      **Application Identifier** consisting of the UUID of the Application.
    required: true
    type: string

  # Subscription Identifier
  # Specified as part of the path expression
  subscriptionId:
    name: subscriptionId
    in: path
    description: |
      Subscription Id
    required: true
    type: string

  # Mediation policy identifier
  # Specified as part of the path expression
  mediationPolicyId:
    name: mediationPolicyId
    in: path
    description: |
      Mediation policy Id
    required: true
    type: string

  # Resource policy identifier
  # Specified as part of the path expression
  resourcePolicyId:
    name: resourcePolicyId
    in: path
    description: |
      registry resource Id
    required: true
    type: string

  # Subscription Identifier
  # Specified as part of the query string
  subscriptionId-Q:
    name: subscriptionId
    in: query
    description: |
      Subscription Id
    required: true
    type: string

  # Tier Name
  # Specified as part of the path expression
  policyName:
    name: policyName
    in: path
    description: |
      Tier name
    required: true
    type: string

  # Tier Name
  # Specified as part of the query string
  policyName-Q:
    name: policyName
    in: query
    description: |
      Name of the policy
    required: true
    type: string

  # Tier Type
  # Specified as part of the path expression
  policyLevel:
    name: policyLevel
    in: path
    description: |
      List API or Application or Resource type policies.
    type: string
    enum:
      - api
      - subcription
    required: true

  # Tier Type
  # Specified as part of the query string
  policyLevel-Q:
    name: policyLevel
    in: query
    description: |
      List API or Application or Resource type policies.
    type: string
    enum:
      - api
      - subcription
    required: true

  # Used for pagination:
  # The maximum number of resoures to be returned by a GET
  limit:
    name: limit
    in: query
    description: |
      Maximum size of resource array to return.
    default: 25
    type: integer

  # The HTTP Accept header
  Accept:
    name: Accept
    in: header
    description: |
      Media types acceptable for the response. Default is application/json.
    default: application/json
    type: string

  # Used for pagination:
  # The order number of an instance in a qualified set of resoures
  # at which to start to return the next batch of qualified resources
  offset:
    name: offset
    in: query
    description: |
      Starting point within the complete list of items qualified.
    default: 0
    type: integer

  # The HTTP If-None-Match header
  # Used to avoid retrieving data that are already cached
  If-None-Match:
    name: If-None-Match
    in: header
    description: |
      Validator for conditional requests; based on the ETag of the formerly retrieved
      variant of the resource.
    type : string
  # The HTTP If-Match header
  # Used to avoid concurrent updates
  If-Match:
    name: If-Match
    in: header
    description: |
      Validator for conditional requests; based on ETag.
    type: string

  # Scope Name
  scopeName:
    name: scopeId
    in: path
    description: |
      Scope name
    required: true
    type: string

# Shared Scope Id
  scopeId:
    name: scopeId
    in: path
    description: |
      Scope Id consisting the UUID of the shared scope
    required: true
    type: string

  # Specifies whether full details of APIs should be returned on apisGet call
  expand:
    name: expand
    in: query
    description: |
      Defines whether the returned response should contain full details of API
    type: boolean
  #Threat protection policy ID parameter
  threatProtectionPolicyId:
    name: policyId
    in: path
    description: |
      The UUID of a Policy
    required: true
    type: string

  # Role ID
  roleId:
    name: roleId
    in: path
    description: |
      The Base 64 URL encoded role name with domain. If the given role is in secondary user-store, role ID should be
      derived as Base64URLEncode({user-store-name}/{role-name}). If the given role is in PRIMARY user-store, role ID
      can be derived as Base64URLEncode(role-name)
    required: true
    type: string

  #Threat Protection policy
  threatProtectionPolicy:
    name: threatProtectionPolicy
    in: body
    description: |
      Threat protection policy request parameter
    required: true
    schema: {
      $ref: '#/definitions/ThreatProtectionPolicy'
    }

  # Requested Tenant domain
  # Specified as a header parameter
  requestedTenant:
    name: X-WSO2-Tenant
    in: header
    description: |
      For cross-tenant invocations, this is used to specify the tenant domain, where the resource need to be
        retirieved from.
    required: false
    type: string

  # API Identifier
  # Specified as part of the path expression
  apiProductId:
    name: apiProductId
    in: path
    description: |
      **API Product ID** consisting of the **UUID** of the API Product. Using the **UUID** in the API call is recommended.
    required: true
    type: string
    x-encoded: true

  # Tenant Domain
  tenantDomain:
    name: tenantDomain
    in: path
    description: |
      The domain of a specific tenant
    required: true
    type: string

  # The alertType parameter
  alertType:
    name: alertType
    in: path
    type: string
    required: true
    description: The alert type.

  # The alert subscription id parameter
  configurationId:
    name: configurationId
    type: string
    in: path
    required: true
    description: The alert configuration id.

######################################################
# The response schemas used by the API resources
######################################################
responses:

  # Bad Request Error Response Schema
  BadRequest:
    description: Bad Request. Invalid request or validation error.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 400
        message: "Bad Request"
        description: "Invalid request or validation error"
        moreInfo: ""
        error: []

  # Unauthorized Error Response Schema
  Unauthorized:
    description: Unauthorized. The user is not authorized.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 401
        message: "Unauthorized"
        description: "The user is not authorized"
        moreInfo: ""
        error: []

  # Forbidden Error Response Schema
  Forbidden:
    description: Forbidden. The request must be conditional but no condition has been specified.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 403
        message: "Forbidden"
        description: "The request must be conditional but no condition has been specified"
        moreInfo: ""
        error: []

  # Not Found Error Response Schema
  NotFound:
    description: Not Found. The specified resource does not exist.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 404
        message: "Not Found"
        description: "The specified resource does not exist"
        moreInfo: ""
        error: []

  # Not Acceptable Error Response Schema
  NotAcceptable:
    description: Not Acceptable. The requested media type is not supported.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 406
        message: "Not Acceptable"
        description: "The requested media type is not supported"
        moreInfo: ""
        error: []

  # Conflict Error Response Schema
  Conflict:
    description: Conflict. Specified resource already exists.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 409
        message: "Conflict"
        description: "Specified resource already exists"
        moreInfo: ""
        error: []

  # Precondition Failed Error Response Schema
  PreconditionFailed:
    description: Precondition Failed. The request has not been performed because one of the preconditions is not met.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 412
        message: "Precondition Failed"
        description: "The request has not been performed because one of the preconditions is not met"
        moreInfo: ""
        error: []

  # Unsupported Media Type Error Response Schema
  UnsupportedMediaType:
    description: Unsupported Media Type. The entity of the request was not in a supported format.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 415
        message: "Unsupported media type"
        description: "The entity of the request was not in a supported format"
        moreInfo: ""
        error: []

  # Internal Server Error Response Schema
  InternalServerError:
    description: Internal Server Error.
    schema:
      $ref: '#/definitions/Error'
    examples:
      application/json:
        code: 500
        message: "Internal Server Error"
        description: "The server encountered an internal error. Please contact administrator."
        moreInfo: ""
        error: []

######################################################
# The resources used by some of the APIs above within the message body
######################################################
definitions:

  #-----------------------------------------------------
  # The API List resource
  #-----------------------------------------------------
  APIList:
    title: API List
    properties:
      count:
        type: integer
        description: |
          Number of APIs returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/APIInfo'
      pagination:
        $ref: '#/definitions/Pagination'
        # example:
        #   next: "/apis?limit=1&offset=2&query="
        #   previous: "/apis?limit=1&offset=0&query="

  #-----------------------------------------------------
  # The API List resource
  #-----------------------------------------------------
  APIListExpanded:
    title: API List
    properties:
      count:
        type: integer
        description: |
          Number of APIs returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/API'
      pagination:
        $ref: '#/definitions/Pagination'
        # example:
        #   next: "/apis?limit=1&offset=2&query="
        #   previous: "/apis?limit=1&offset=0&query="

  #-----------------------------------------------------
  # The API Info resource
  #-----------------------------------------------------
  APIInfo:
    title: API Info object with basic API details.
    properties:
      id:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        example: CalculatorAPI
      description:
        type: string
        example: A calculator API that supports basic operations
      context:
        type: string
        example: CalculatorAPI
      version:
        type: string
        example: 1.0.0
      provider:
        description: |
          If the provider value is not given, the user invoking the API will be used as the provider.
        type: string
        example: admin
      type:
        type: string
        example: HTTP
      lifeCycleStatus:
        type: string
        example: CREATED
      workflowStatus:
        type: string
        example: APPROVED
      hasThumbnail:
        type: boolean
        example: true
      securityScheme:
        type: array
        items:
          type: string

  #-----------------------------------------------------
  # The API resource
  #-----------------------------------------------------
  API:
    title: API object
    required:
      - name
      - context
      - version
    x-scopes:
      - apim:api_create
    properties:
      id:
        type: string
        description: |
          UUID of the api registry artifact
        readOnly: true
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        example: PizzaShackAPI
      description:
        type: string
        example: This is a simple API for Pizza Shack online pizza delivery store.
      context:
        type: string
        example: pizza
      version:
        type: string
        example: 1.0.0
      provider:
        description: |
          If the provider value is not given user invoking the api will be used as the provider.
        type: string
        example: admin
      lifeCycleStatus:  # NEED TO RENAME AS lifeCycleState
        type: string
        example: CREATED
        x-otherScopes:
        - apim:api_publish
      wsdlInfo:
        $ref: '#/definitions/WSDLInfo'
        readOnly: true
      wsdlUrl:
        type: string
        example: /apimgt/applicationdata/wsdls/admin--soap1.wsdl
        readOnly: true
      testKey:
        type: string
        example: 8swdwj9080edejhj
        readOnly: true
      responseCachingEnabled:
        type: boolean
        example: true
      cacheTimeout:
        type: integer
        example: 300
      destinationStatsEnabled:
        type: string
        example: Disabled
      hasThumbnail:
        type: boolean
        example: false
      isDefaultVersion:
        type: boolean
        example: false
      enableSchemaValidation:
        type: boolean
        example: false
      enableStore:
        type: boolean
        example: true
        x-otherScopes:
          - apim:api_publish
      type:
        type: string
        description: The api creation type to be used. Accepted values are HTTP, WS, SOAPTOREST, GRAPHQL
        enum:
          - HTTP
          - WS
          - SOAPTOREST
          - SOAP
          - GRAPHQL
        example: HTTP
        default: HTTP
      transport:
        description: |
          Supported transports for the API (http and/or https).
        type: array
        items:
          type: string
        example: ["http","https"]
      tags:
        type: array
        items:
          type: string
        example: ["pizza","food"]
        x-otherScopes:
          - apim:api_publish
      policies:
        type: array
        items:
          type: string
        example: ["Unlimited"]
        x-otherScopes:
          - apim:api_publish
      apiThrottlingPolicy:
        description: The API level throttling policy selected for the particular API
        type: string
        example: "Unlimited"
        x-otherScopes:
          - apim:api_publish
      authorizationHeader:
        type: string
        description: |
          Name of the Authorization header used for invoking the API. If it is not set, Authorization header name specified
          in tenant or system level will be used.
        example: Authorization
      securityScheme:
        type: array
        description: |
          Types of API security, the current API secured with. It can be either OAuth2 or mutual SSL or both. If
          it is not set OAuth2 will be set as the security for the current API.
        items:
          type: string
        example: ["oauth2"]
      maxTps:
        $ref: '#/definitions/APIMaxTps'
      visibility:
        type: string
        description: The visibility level of the API. Accepts one of the following. PUBLIC, PRIVATE, RESTRICTED.
        enum:
          - PUBLIC
          - PRIVATE
          - RESTRICTED
        example: PUBLIC
        default: PUBLIC
        x-otherScopes:
          - apim:api_publish
      visibleRoles:
        type: array
        description: The user roles that are able to access the API in Store
        items:
          type: string
        example: []
        x-otherScopes:
          - apim:api_publish
      visibleTenants:
        type: array
        items:
          type: string
        example: []
      endpointSecurity:
        $ref: '#/definitions/APIEndpointSecurity'
      gatewayEnvironments:
        description: |
          List of gateway environments the API is available
        type: array
        items:
          type: string
        example: ["Production and Sandbox"]
        x-otherScopes:
          - apim:api_publish
      deploymentEnvironments:
        description: |
          List of selected deployment environments and clusters
        type: array
        items:
          $ref: '#/definitions/DeploymentEnvironments'
        x-otherScopes:
          - apim:api_publish
      labels:
        description: |
          Labels of micro-gateway environments attached to the API.
        type: array
        items:
          type: string
        example: []
      mediationPolicies:
        type: array
        items:
          $ref: '#/definitions/MediationPolicy'
        example:
          [
            {"name": "json_to_xml_in_message","type": "in"},
            {"name": "xml_to_json_out_message","type": "out"},
            {"name": "json_fault","type":"fault"}
          ]
      subscriptionAvailability:
        type: string
        description: The subscription availability. Accepts one of the following. CURRENT_TENANT, ALL_TENANTS or SPECIFIC_TENANTS.
        enum:
          - CURRENT_TENANT
          - ALL_TENANTS
          - SPECIFIC_TENANTS
        example: CURRENT_TENANT
        default: CURRENT_TENANT
        x-otherScopes:
          - apim:api_publish
      subscriptionAvailableTenants:
        type: array
        items:
          type: string
        example: []
      additionalProperties:
        type: object
        additionalProperties:
          type: string
        description : Map of custom properties of API
        x-otherScopes:
          - apim:api_publish
      monetization:
        $ref: '#/definitions/APIMonetizationInfo'
        readOnly: true
      accessControl:
        type: string
        description: |
          Is the API is restricted to certain set of publishers or creators or is it visible to all the
          publishers and creators. If the accessControl restriction is none, this API can be modified by all the
          publishers and creators, if not it can only be viewable/modifiable by certain set of publishers and creators,
           based on the restriction.
        enum:
          - NONE
          - RESTRICTED
        default: NONE
      accessControlRoles:
        type: array
        description: The user roles that are able to view/modify as API publisher or creator.
        items:
          type: string
        example: []
      businessInformation:
        allOf:
          - $ref: '#/definitions/APIBusinessInformation'
        x-otherScopes:
          - apim:api_publish
      corsConfiguration:
        $ref: '#/definitions/APICorsConfiguration'
      workflowStatus:
        type: string
        example: APPROVED
      createdTime:
        type: string
        example: 2017-02-20T13:57:16.229
      lastUpdatedTime:
        type: string
        example: 2017-02-20T13:57:16.229
        x-otherScopes:
          - apim:api_publish
      endpointConfig:
        type: object
        description: |
          Endpoint configuration of the API. This can be used to provide different types of endpoints including Simple REST Endpoints, Loadbalanced and Failover.

          `Simple REST Endpoint`
            {
              "endpoint_type": "http",
              "sandbox_endpoints":       {
                 "url": "https://localhost:9443/am/sample/pizzashack/v1/api/"
              },
              "production_endpoints":       {
                 "url": "https://localhost:9443/am/sample/pizzashack/v1/api/"
              }
            }

          `Loadbalanced Endpoint`

            {
              "endpoint_type": "load_balance",
              "algoCombo": "org.apache.synapse.endpoints.algorithms.RoundRobin",
              "sessionManagement": "",
              "sandbox_endpoints":       [
                          {
                    "url": "https://localhost:9443/am/sample/pizzashack/v1/api/1"
                 },
                          {
                    "endpoint_type": "http",
                    "template_not_supported": false,
                    "url": "https://localhost:9443/am/sample/pizzashack/v1/api/2"
                 }
              ],
              "production_endpoints":       [
                          {
                    "url": "https://localhost:9443/am/sample/pizzashack/v1/api/3"
                 },
                          {
                    "endpoint_type": "http",
                    "template_not_supported": false,
                    "url": "https://localhost:9443/am/sample/pizzashack/v1/api/4"
                 }
              ],
              "sessionTimeOut": "",
              "algoClassName": "org.apache.synapse.endpoints.algorithms.RoundRobin"
            }

          `Failover Endpoint`

            {
              "production_failovers":[
                 {
                    "endpoint_type":"http",
                    "template_not_supported":false,
                    "url":"https://localhost:9443/am/sample/pizzashack/v1/api/1"
                 }
              ],
              "endpoint_type":"failover",
              "sandbox_endpoints":{
                 "url":"https://localhost:9443/am/sample/pizzashack/v1/api/2"
              },
              "production_endpoints":{
                 "url":"https://localhost:9443/am/sample/pizzashack/v1/api/3"
              },
              "sandbox_failovers":[
                 {
                    "endpoint_type":"http",
                    "template_not_supported":false,
                    "url":"https://localhost:9443/am/sample/pizzashack/v1/api/4"
                 }
              ]
            }

          `Default Endpoint`

            {
              "endpoint_type":"default",
              "sandbox_endpoints":{
                 "url":"default"
              },
              "production_endpoints":{
                 "url":"default"
              }
            }

          `Endpoint from Endpoint Registry`
            {
              "endpoint_type": "Registry",
              "endpoint_id": "{registry-name:entry-name:version}",
            }
        example:
          {
            "endpoint_type": "http",
            "sandbox_endpoints":       {
              "url": "https://localhost:9443/am/sample/pizzashack/v1/api/"
            },
            "production_endpoints":       {
              "url": "https://localhost:9443/am/sample/pizzashack/v1/api/"
            }
          }
      endpointImplementationType:
        type: string
        example: INLINE
        enum:
          - INLINE
          - ENDPOINT
        default: ENDPOINT
      scopes:
        type: array
        items:
          $ref: '#/definitions/APIScope'
      operations:
        type: array
        items:
          $ref: '#/definitions/APIOperations'
        example:
          [
            {
              "target": "/order/{orderId}",
              "verb": "POST",
              "authType": "Application & Application User",
              "throttlingPolicy": "Unlimited"
            },
            {
              "target": "/menu",
              "verb": "GET",
              "authType": "Application & Application User",
              "throttlingPolicy": "Unlimited"
            }
          ]
      threatProtectionPolicies:
        properties:
          list:
            type: array
            items:
              properties:
                policyId:
                  type: string
                priority:
                  type: integer
      categories:
        description: |
          API categories
        type: array
        items:
          type: string
        example: []
      keyManagers:
        description: |
          API Key Managers
        type: object
        readOnly: true

  #-----------------------------------------------------
  # The Audit Report resource
  #-----------------------------------------------------
  AuditReport:
    title: Resource for Audit Report
    properties:
      report:
        type: string
        description: |
          The API Security Audit Report
      grade:
        type: string
        description: |
          The overall grade of the Security Audit
        example: "27.95"
      numErrors:
        type: integer
        description: |
          The number of errors in the API Definition
        example: 20
      externalApiId:
        type: string
        description: |
          The External API ID
        example: "fd21f9f7-3674-49cf-8a83-dca401f635de"

  #-----------------------------------------------------
  # The API Product List resource
  #-----------------------------------------------------
  APIProductList:
    title: API Product List
    properties:
      count:
        type: integer
        description: |
          Number of API Products returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/APIProductInfo'
      pagination:
        $ref: '#/definitions/Pagination'

  #-----------------------------------------------------
  # The API Product Info resource
  #-----------------------------------------------------
  APIProductInfo:
    title: API Info object with basic API details.
    properties:
      id:
        type: string
        description: |
          UUID of the api product
        example: 01234567-0123-0123-0123-012345678901
        readOnly: true
      name:
        type: string
        description: Name of the API Product
        example: PizzaShackAPIProduct
      context:
        type: string
        example: pizzaproduct
      description:
        type: string
        description: A brief description about the API
        example: This is a simple API for Pizza Shack online pizza delivery store
      provider:
        description: |
          If the provider value is not given, the user invoking the API will be used as the provider.
        type: string
        example: admin
      hasThumbnail:
        type: boolean
        example: true
      state:
        type: string
        description: |
          State of the API product. Only published api products are visible on the store
        enum:
          - CREATED
          - PUBLISHED
      securityScheme:
        type: array
        description: |
          Types of API security, the current API secured with. It can be either OAuth2 or mutual SSL or both. If
          it is not set OAuth2 will be set as the security for the current API.
        items:
          type: string
        example: ["oauth2"]

  #-----------------------------------------------------
  # The Detailed API Product resource
  #-----------------------------------------------------
  APIProduct:
    title: API Product object
    required:
      - name
    properties:
      id:
        type: string
        description: |
          UUID of the api product
        example: 01234567-0123-0123-0123-012345678901
        readOnly: true
      name:
        type: string
        description: Name of the API Product
        example: PizzaShackAPIProduct
      context:
        type: string
        example: pizzaproduct
      description:
        type: string
        description: A brief description about the API
        example: This is a simple API for Pizza Shack online pizza delivery store
      provider:
        description: |
          If the provider value is not given, the user invoking the API will be used as the provider.
        type: string
        example: admin
      hasThumbnail:
        type: boolean
        example: false
      state:
        type: string
        description: |
          State of the API product. Only published api products are visible on the store
        enum:
          - CREATED
          - PUBLISHED
      enableSchemaValidation:
        type: boolean
        example: false
      enableStore:
        type: boolean
        example: true
      testKey:
        type: string
        example: 8swdwj9080edejhj
        readOnly: true
      responseCachingEnabled:
        type: boolean
        example: true
      cacheTimeout:
        type: integer
        example: 300
      visibility:
        type: string
        description: The visibility level of the API. Accepts one of the following. PUBLIC, PRIVATE, RESTRICTED.
        enum:
          - PUBLIC
          - PRIVATE
          - RESTRICTED
        example: PUBLIC
        default: PUBLIC
      visibleRoles:
        type: array
        description: The user roles that are able to access the API
        items:
          type: string
        example: []
      visibleTenants:
        type: array
        items:
          type: string
        example: []
      accessControl:
        type: string
        description: |
          Defines whether the API Product is restricted to certain set of publishers or creators or is it visible to all the
          publishers and creators. If the accessControl restriction is none, this API Product can be modified by all the
          publishers and creators, if not it can only be viewable/modifiable by certain set of publishers and creators,
          based on the restriction.
        enum:
          - NONE
          - RESTRICTED
        default: NONE
      accessControlRoles:
        type: array
        description: The user roles that are able to view/modify as API Product publisher or creator.
        items:
          type: string
        example: []
      gatewayEnvironments:
        description: |
          List of gateway environments the API Product is available
        type: array
        items:
          type: string
        example: ["Production and Sandbox"]
      apiType:
        type: string
        description: The API type to be used. Accepted values are API, APIProduct
        example: APIProduct
      transport:
        description: |
          Supported transports for the API (http and/or https).
        type: array
        items:
          type: string
        example: ["http","https"]
      tags:
        type: array
        items:
          type: string
        example: ["pizza","food"]
      policies:
        type: array
        items:
          type: string
        example: ["Unlimited"]
      apiThrottlingPolicy:
        description: The API level throttling policy selected for the particular API Product
        type: string
        example: "Unlimited"
      authorizationHeader:
        type: string
        description: |
          Name of the Authorization header used for invoking the API. If it is not set, Authorization header name specified
          in tenant or system level will be used.
        example: Authorization
      securityScheme:
        type: array
        description: |
          Types of API security, the current API secured with. It can be either OAuth2 or mutual SSL or both. If
          it is not set OAuth2 will be set as the security for the current API.
        items:
          type: string
        example: ["oauth2"]
      subscriptionAvailability:
        type: string
        description: The subscription availability. Accepts one of the following. CURRENT_TENANT, ALL_TENANTS or SPECIFIC_TENANTS.
        enum:
          - CURRENT_TENANT
          - ALL_TENANTS
          - SPECIFIC_TENANTS
        example: CURRENT_TENANT
        default: ALL_TENANTS
      subscriptionAvailableTenants:
        type: array
        items:
          type: string
        example: []
        x-otherScopes:
          - apim:api_publish
      additionalProperties:
        type: object
        additionalProperties:
          type: string
        description : Map of custom properties of API
      monetization:
        $ref: '#/definitions/APIMonetizationInfo'
      businessInformation:
        $ref: '#/definitions/APIProductBusinessInformation'
      corsConfiguration:
        $ref: '#/definitions/APICorsConfiguration'
      createdTime:
        type: string
        example: 2017-02-20T13:57:16.229
      lastUpdatedTime:
        type: string
        example: 2017-02-20T13:57:16.229
      apis:
        description: |
          APIs and resources in the API Product.
        type: array
        items:
          $ref: '#/definitions/ProductAPI'
        example:
          [
            {
              "name": "PizzaShackAPI",
              "apiId": "01234567-0123-0123-0123-012345678901",
              "version": "1.0",
              "operations": [
                {
                  "target": "/order/{orderId}",
                  "verb": "POST",
                  "authType": "Application & Application User",
                  "throttlingPolicy": "Unlimited"
                },
                {
                    "target": "/menu",
                    "verb": "GET",
                    "authType": "Application & Application User",
                    "throttlingPolicy": "Unlimited"
                }
              ]
            }
          ]
      scopes:
        type: array
        items:
          $ref: '#/definitions/APIScope'
        example: []
      categories:
        description: |
          API categories
        type: array
        items:
          type: string
        example: []
  #-----------------------------------------------------
  # The API and its resources in a API Product resource
  #-----------------------------------------------------
  ProductAPI:
    title: ProductAPI
    required:
      - apiId
    properties:
      name:
        type: string
        example: PizzaShackAPI
      apiId:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      version:
        type: string
        example: 1.0
      operations:
        type: array
        items:
          $ref: '#/definitions/APIOperations'

  #-----------------------------------------------------
  # The Resource Path resource
  #-----------------------------------------------------
  ResourcePath:
    title: ResourcePath
    required:
      - id
    properties:
      id:
        type: integer
        example: 1
      resourcePath:
        type: string
        example: /menu
      httpVerb:
        type: string
        example: GET

  #-----------------------------------------------------
  # The Resource Path List resource
  #-----------------------------------------------------
  ResourcePathList:
    title: ResourcePath List
    properties:
      count:
        type: integer
        description: |
          Number of API Resource Paths returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/ResourcePath'
      pagination:
        $ref: '#/definitions/Pagination'

  #-----------------------------------------------------
  # The APIProduct outdated status resource
  #-----------------------------------------------------
  APIProductOutdatedStatus:
    title: APIProduct is outdated status
    properties:
      isOutdated:
        type: boolean
        description: |
          Indicates if an API Product is outdated
        example: true

  #-----------------------------------------------------
  # API Business Information resource
  #-----------------------------------------------------
  APIProductBusinessInformation:
    properties:
      businessOwner:
        type: string
        example: businessowner
      businessOwnerEmail:
        type: string
        example: businessowner@wso2.com
      technicalOwner:
        type: string
        example: technicalowner
      technicalOwnerEmail:
        type: string
        example: technicalowner@wso2.com

  #-----------------------------------------------------
  # The Claim resource
  #-----------------------------------------------------
  Claim:
    title: Claim
    properties:
      name:
        type: string
        example: email
      URI:
        type: string
        example: http://wso2.org/claims/emailaddress
      value:
        type: string
        example: admin@wso2.com

  #-----------------------------------------------------
  # The Subscriber resource
  #-----------------------------------------------------
  SubscriberInfo:
    title: SubscriberInfo
    properties:
      name:
        type: string
        example: admin
      claims:
        type: array
        items:
          $ref: '#/definitions/Claim'

  #-----------------------------------------------------
  # The Application resource
  #-----------------------------------------------------
  Application:
    title: Application
    required:
      - name
      - throttlingTier
    properties:
      applicationId:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        example: CalculatorApp
      subscriber:
        type: string
        example: admin
      throttlingTier:
        type: string
        example: Unlimited
      description:
        type: string
        example: Sample calculator application
      groupId:
        type: string
        example: ""
  #-----------------------------------------------------
  # The Application Info resource
  #-----------------------------------------------------
  ApplicationInfo:
    title: Application info object with basic application details
    properties:
      applicationId:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        example: CalculatorApp
      subscriber:
        type: string
        example: admin
      description:
        type: string
        example: Sample calculator application
      subscriptionCount:
        type: integer

  #-----------------------------------------------------
  # The Document List resource
  #-----------------------------------------------------
  DocumentList:
    title: Document List
    properties:
      count:
        type: integer
        description: |
          Number of Documents returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/Document'
      pagination:
        $ref: '#/definitions/Pagination'
        # example:
        #   next: "/apis/01234567-0123-0123-0123-012345678901/documents?limit=1&offset=2"
        #   previous: "/apis/01234567-0123-0123-0123-012345678901/documents?limit=1&offset=0"

  #-----------------------------------------------------
  # The Document resource
  #-----------------------------------------------------
  Document:
    title: Document
    required:
      - name
      - type
      - sourceType
      - visibility
    properties:
      documentId:
        type: string
        example: 01234567-0123-0123-0123-012345678901
        readOnly: true
      name:
        type: string
        example: PizzaShackDoc
      type:
        type: string
        enum:
          - HOWTO
          - SAMPLES
          - PUBLIC_FORUM
          - SUPPORT_FORUM
          - API_MESSAGE_FORMAT
          - SWAGGER_DOC
          - OTHER
        example: HOWTO
      summary:
        type: string
        example: "Summary of PizzaShackAPI Documentation"
      sourceType:
        type: string
        enum:
          - INLINE
          - MARKDOWN
          - URL
          - FILE
        example: INLINE
      sourceUrl:
        type: string
        example: ""
        readOnly: true
      fileName:
        type: string
        example: ""
        readOnly: true
      inlineContent:
        type: string
        example: "This is doc content. This can have many lines."
      otherTypeName:
        type: string
        example: ""
        readOnly: true
      visibility:
        type: string
        enum:
          - OWNER_ONLY
          - PRIVATE
          - API_LEVEL
        example: API_LEVEL
      createdTime:
        type: string
        example: 2017-02-20T13:57:16.229
        readOnly: true
      createdBy:
        type: string
        example: admin
      lastUpdatedTime:
        type: string
        example: 2017-02-20T13:57:16.229
        readOnly: true
      lastUpdatedBy:
        type: string
        example: admin
        readOnly: true

  #-----------------------------------------------------
  # The GraphQL Schema resource
  #-----------------------------------------------------
  GraphQLSchema:
    title: GraphQL Schema
    required:
      - name
    properties:
      name:
        type: string
        example: "admin--HackerNewsAPI.graphql"
      schemaDefinition:
        type: string
  #-----------------------------------------------------
  # The GraphQL Query Complexity Info resource
  #-----------------------------------------------------
  GraphQLQueryComplexityInfo:
    title: GraphQL Query Complexity Info
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/GraphQLCustomComplexityInfo'

  #-----------------------------------------------------
  # The GraphQL Custom Complexity Info resource
  #-----------------------------------------------------
  GraphQLCustomComplexityInfo:
    title: GraphQL Custom Complexity Info
    required:
      - type
      - field
      - complexityValue
    properties:
      type:
        type: string
        description: |
          The type found within the schema of the API
        example: "Country"
      field:
        type: string
        description: |
          The field which is found under the type within the schema of the API
        example: "name"
      complexityValue:
        type: integer
        description: |
          The complexity value allocated for the associated field under the specified type
        example: 1

  #-----------------------------------------------------
  # The GraphQL Schema Type List resource
  #-----------------------------------------------------
  GraphQLSchemaTypeList:
    title: List of types and corresponding fields of the GraphQL Schema
    properties:
      typeList:
        type: array
        items:
          $ref: '#/definitions/GraphQLSchemaType'

  #-----------------------------------------------------
  # The GraphQL Schema Type resource
  #-----------------------------------------------------
  GraphQLSchemaType:
    title: Single type and corresponding fields found within the GraphQL Schema
    properties:
      type:
        type: string
        description: |
          Type found within the GraphQL Schema
        example: "Country"
      fieldList:
        type: array
        description: |
          Array of fields under current type
        items:
          type: string
        example: ["code","name"]


  #-----------------------------------------------------
  # The Mediation List resource
  #-----------------------------------------------------
  MediationList:
    title: Mediation List
    properties:
      count:
        type: integer
        description: |
          Number of mediation sequences returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/MediationInfo'
      pagination:
        $ref: '#/definitions/Pagination'

  #-----------------------------------------------------
  # The MediationInfo resource
  #-----------------------------------------------------
  MediationInfo:
    title: MediationInfo
    required:
      - name
      - type
      - id
    properties:
      name:
        type: string
        example: json_fault.xml
      id:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      type:
        type: string
        enum:
          - in
          - out
          - fault
        example: in

  #-----------------------------------------------------
  # The Mediation resource
  #-----------------------------------------------------
  Mediation:
    title: Mediation
    required:
      - name
      - type
    properties:
      id:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        example: json_fault.xml
      type:
        type: string
        enum:
          - in
          - out
          - fault
        example: in

  #-----------------------------------------------------
  # The Tier List resource
  #-----------------------------------------------------
  ThrottlingPolicyList:
    title: Throttling policy list
    properties:
      count:
        type: integer
        description: |
          Number of Tiers returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/ThrottlingPolicy'
      pagination:
        $ref: '#/definitions/Pagination'
        # example:
        #   next: "/throttling-policies/subscription?limit=1&offset=2"
        #   previous: "/throttling-policies/subscription?limit=1&offset=0"

  #-----------------------------------------------------
  # The Tier resource
  #-----------------------------------------------------
  ThrottlingPolicy:
    title: Tier
    required:
      - name
      - tierPlan
      - requestCount
      - unitTime
      - stopOnQuotaReach
    properties:
      name:
        type: string
        example: Platinum
      description:
        type: string
        example: "Allows 50 request(s) per minute."
      policyLevel:
        type: string
        enum:
          - subscription
          - api
        example: api
      displayName:
        type: string
        example: Platinum
      attributes:
        description: |
          Custom attributes added to the policy policy
        type: object
        additionalProperties:
          type: string
        example: {}
      requestCount:
        description: |
          Maximum number of requests which can be sent within a provided unit time
        type: integer
        format: int64
        example: 50
      unitTime:
        type: integer
        format: int64
        example: 60000
      timeUnit:
        type: string
        example: "min"
      tierPlan:
        description: |
          This attribute declares whether this policy is available under commercial or free
        type: string
        enum:
          - FREE
          - COMMERCIAL
        example: FREE
      stopOnQuotaReach:
        description: |
          By making this attribute to false, you are capabale of sending requests
          even if the request count exceeded within a unit time
        type: boolean
        example: true
      monetizationProperties:
        description:
          Properties of a tier plan which are related to monetization
        type: object
        additionalProperties:
          type: string
        example: {}
  #-----------------------------------------------------
  # The Subscription List resource
  #-----------------------------------------------------
  SubscriptionList:
    title: Subscription List
    properties:
      count:
        type: integer
        description: |
          Number of Subscriptions returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/Subscription'
      pagination:
        $ref: '#/definitions/Pagination'
        # example:
        #   next: "/subscriptions?limit=1&offset=2&apiId=01234567-0123-0123-0123-012345678901"
        #   previous: "/subscriptions?limit=1&offset=0&apiId=01234567-0123-0123-0123-012345678901"

  #-----------------------------------------------------
  # The Subscription resource
  #-----------------------------------------------------
  Subscription:
    title: Subscription
    required:
      - subscriptionId
      - applicationInfo
      - throttlingPolicy
      - subscriptionStatus
    properties:
      subscriptionId:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      applicationInfo:
        $ref: '#/definitions/ApplicationInfo'
      throttlingPolicy:
        type: string
        example: Unlimited
      subscriptionStatus:
        type: string
        enum:
          - BLOCKED
          - PROD_ONLY_BLOCKED
          - UNBLOCKED
          - ON_HOLD
          - REJECTED
        example: BLOCKED

  #-----------------------------------------------------
  # The API monetization usage resource
  #-----------------------------------------------------
  APIMonetizationUsage:
    title: API monetization usage object
    properties:
      properties:
        type: object
        description: Map of custom properties related to monetization usage
        additionalProperties:
          type: string

  #-----------------------------------------------------
  # The API revenue resource
  #-----------------------------------------------------
  APIRevenue:
    title: API revenue data object
    properties:
      properties:
        type: object
        description: Map of custom properties related to API revenue
        additionalProperties:
          type: string

  #-----------------------------------------------------
  # The Mediation Policy resource
  #-----------------------------------------------------
  MediationPolicy:
    title: Mediation Policy
    required:
      - name
    properties:
      id:
        type: string
        example: 69ea3fa6-55c6-472e-896d-e449dd34a824
      name:
        type: string
        example: log_in_message
      type:
        type: string
        example: in
      shared:
        type: boolean
        example: true

  #-----------------------------------------------------
  # The Error resource
  #-----------------------------------------------------
  Error:
    title: Error object returned with 4XX HTTP Status
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
        description: Error message.
      description:
        type: string
        description: |
          A detail description about the error message.
      moreInfo:
        type: string
        description: |
          Preferably an url with more details about the error.
      error:
        type: array
        description: |
          If there are more than one error list them out.
          For example, list out validation errors by each field.
        items:
          $ref: '#/definitions/ErrorListItem'

  #-----------------------------------------------------
  # The Error List Item resource
  #-----------------------------------------------------
  ErrorListItem:
    title: Description of individual errors that may have occurred during a request.
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
        description: |
          Description about individual errors occurred
      description:
        type: string
        description: |
          A detail description about the error message.

  #-----------------------------------------------------
  # The Environment resource
  #-----------------------------------------------------
  Environment:
    title: Environment
    required:
      - name
      - type
      - serverUrl
      - endpoints
      - showInApiConsole
    properties:
      name:
        type: string
        example: Production and Sandbox
      type:
        type: string
        example: hybrid
      serverUrl:
        type: string
        example: "https://localhost:9443/services/"
      showInApiConsole:
        type: boolean
        example: true
      endpoints:
        $ref: '#/definitions/EnvironmentEndpoints'

  #-----------------------------------------------------
  # The Environment List resource
  #-----------------------------------------------------
  EnvironmentList:
    title: Environment List
    properties:
      count:
        type: integer
        description: |
          Number of Environments returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/Environment'


  #-----------------------------------------------------
  # The Environment Endpoint resource
  #-----------------------------------------------------
  EnvironmentEndpoints :
    title: Environment Endpoints
    properties:
      http:
        type: string
        description: HTTP environment URL
        example: "http://localhost:8280"
      https:
        type: string
        description: HTTPS environment URL
        example: "https://localhost:8243"
      ws:
        type: string
        description: WS environment URL
        example: "http://localhost:9099"
      wss:
        type: string
        description: WSS environment URL
        example: "https://localhost:8099"

  #-----------------------------------------------------
  # The File Information resource
  #-----------------------------------------------------
  FileInfo :
    title: File Information including meta data
    properties:
      relativePath:
        type: string
        description: relative location of the file (excluding the base context and host of the Publisher API)
        example: "apis/01234567-0123-0123-0123-012345678901/thumbnail"
      mediaType:
        type: string
        description: media-type of the file
        example: "image/jpeg"


  #-----------------------------------------------------
  # API maxTPs resource
  #-----------------------------------------------------
  APIMaxTps:
    properties:
      production:
        type: integer
        format: int64
        example: 1000
      sandbox:
        type: integer
        format: int64
        example: 1000

  #-----------------------------------------------------
  # API Endpoint Security resource
  #-----------------------------------------------------
  APIEndpointSecurity:
    properties:
      type:
        type: string
        example: BASIC
        description: Accepts one of the following, basic or digest.
        enum:
          - BASIC
          - DIGEST
      username:
        type: string
        example: admin
      password:
        type: string
        example: password

  #-----------------------------------------------------
  # API Business Information resource
  #-----------------------------------------------------
  APIBusinessInformation:
    properties:
      businessOwner:
        type: string
        example: businessowner
      businessOwnerEmail:
        type: string
        example: businessowner@wso2.com
      technicalOwner:
        type: string
        example: technicalowner
      technicalOwnerEmail:
        type: string
        example: technicalowner@wso2.com

  #-----------------------------------------------------
  # API CORS configuration resource
  #-----------------------------------------------------
  APICorsConfiguration:
    description: |
      CORS configuration for the API
    properties:
      corsConfigurationEnabled:
        type: boolean
        default: false
      accessControlAllowOrigins:
        type: array
        items:
          type: string
      accessControlAllowCredentials:
        type: boolean
        default: false
      accessControlAllowHeaders:
        type: array
        items:
          type: string
      accessControlAllowMethods:
        type: array
        items:
          type: string
  #-----------------------------------------------------
  # The Environment Endpoint resource
  #-----------------------------------------------------
  Endpoint :
    title: Endpoints
    properties:
      id:
        type: string
        description: |
          UUID of the Endpoint entry
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        description: |
          name of the Endpoint entry
        example: "Endpoint 1"
      endpointConfig:
        properties:
          endpointType:
            type: string
            enum:
              - SINGLE
              - LOAD_BALANCED
              - FAIL_OVER
            example: "FAIL_OVER"
          list:
            type: array
            items:
              $ref: '#/definitions/EndpointConfig'
      endpointSecurity:
        properties:
          enabled:
            type: boolean
            example: false
          type:
            type: string
            example: basic
          username:
            type: string
            example: basic
          password:
            type: string
            example: basic
      maxTps:
        type: integer
        format: int64
        description: Endpoint max tps
        example: 1000
      type:
        type: string
        example: "http"

  #-----------------------------------------------------
  # The Endpoint Configuration resource
  #-----------------------------------------------------
  EndpointConfig :
    title: Endpoint Configuration
    properties:
      url:
        type: string
        description: |
          Service url of the endpoint
        example: "http://localhost:8280"
      timeout:
        type: string
        description: |
          Time out of the endpoint
        example: "1000"
      attributes:
        type: array
        items:
          properties:
            name:
              type: string
              example: "Suspension time"
            value:
              type: string
              example: "2s"

  #-----------------------------------------------------
  # The Environment List resource
  #-----------------------------------------------------
  EndpointList:
    title: Endpoint List
    properties:
      count:
        type: integer
        description: |
          Number of Endpoints returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/Endpoint'

#-----------------------------------------------------
# The Scope resource
#-----------------------------------------------------
  Scope :
    title: Scope
    required:
      - name
    properties:
      id:
        type: string
        description: |
          UUID of the Scope. Valid only for shared scopes.
        example: 01234567-0123-0123-0123-012345678901
        readOnly: true
      name:
        type: string
        description: |
          name of Scope
        example: apim:api_view
      displayName:
        type: string
        description: |
          display name of Scope
        example: api_view
      description:
        type: string
        description: |
          description of Scope
        example: 'This Scope can used to view Apis'
      bindings:
        description: |
          role bindings list of the Scope
        type: array
        items:
          type: string
        example: ['admin','Internal/creator','Internal/publisher']
      usageCount:
        type: integer
        description: |
          usage count of Scope
        example: 3
        readOnly: true

#-----------------------------------------------------
# The Shared Scope Usage resource
#-----------------------------------------------------
  SharedScopeUsage:
    title: SharedScopeUsage
    required:
      - id
      - name
    properties:
      id:
        type: string
        description: |
          UUID of the Scope. Valid only for shared scopes.
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        description: |
          name of Scope
        example: apim:api_view
      usedApiList:
        description: |
          API list which have used the shared scope
        type: array
        items:
          $ref: '#/definitions/SharedScopeUsedAPIInfo'

#-----------------------------------------------------
# The API object where the shared scope is used
#-----------------------------------------------------
  SharedScopeUsedAPIInfo:
    title: API object using shared scope
    required:
      - name
      - context
      - version
    properties:
      name:
        type: string
        example: CalculatorAPI
      context:
        type: string
        example: CalculatorAPI
      version:
        type: string
        example: 1.0.0
      provider:
        description: |
          If the provider value is not given user invoking the api will be used as the provider.
        type: string
        example: admin
      usedResourceList:
        description: |
          Resource list which have used the shared scope within this API
        type: array
        items:
          $ref: '#/definitions/SharedScopeUsedAPIResourceInfo'

  #-----------------------------------------------------
  # The API resource object where the shared scope is used
  #-----------------------------------------------------
  SharedScopeUsedAPIResourceInfo:
    title: API resource object using shared scope
    properties:
      target:
        type: string
        example: "/add"
      verb:
        type: string
        example: "POST"

#-----------------------------------------------------
# The APIScope resource
#-----------------------------------------------------
  APIScope :
    title: APIScope
    required:
      - scope
    properties:
       scope:
         $ref: '#/definitions/Scope'
       shared:
          type: boolean
          description: |
              States whether scope is shared. This will not be honored when updating/adding scopes to APIs or when
              adding/updating Shared Scopes.
          example: true

#-----------------------------------------------------
# The APIOperations resource
#-----------------------------------------------------
  APIOperations :
    title: Operation
    properties:
      id:
        type: string
        example: "postapiresource"
      target:
        type: string
        example: /order/{orderId}
      verb:
        type: string
        example: POST
      authType:
        type: string
        default: "Any"
        example: Application & Application User
      throttlingPolicy:
        type: string
        example: "Unlimited"
      scopes:
        type: array
        items:
          type: string
        example: []
      usedProductIds:
        type: array
        items:
          type: string
        example: []
      amznResourceName:
        type: string
        example: ""
      amznResourceTimeout:
        type: integer


#-----------------------------------------------------
# The Scope List resource
#-----------------------------------------------------
  ScopeList:
    title: Scope List
    properties:
      count:
        type: integer
        description: |
          Number of Scopes returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/Scope'
      pagination:
        $ref: '#/definitions/Pagination'

  #-----------------------------------------------------
  # The External-Store resource
  #-----------------------------------------------------
  ExternalStore:
    title: External Store
    properties:
      id:
        type: string
        description: |
          The external store identifier, which is a unique value.
        example: Store123#
      displayName:
        type: string
        description: |
          The name of the external API Store that is displayed in the Publisher UI.
        example: UKStore
      type:
        type: string
        description: |
          The type of the Store. This can be a WSO2-specific API Store or an external one.
        example: wso2
      endpoint:
        type: string
        description: |
          The endpoint URL of the external store
        example: http://localhost:9764/store

  #-----------------------------------------------------
  # The API-External-Store resource
  #-----------------------------------------------------
  APIExternalStore:
    title: API External Store
    properties:
      id:
        type: string
        description: |
          The external store identifier, which is a unique value.
        example: Store123#
      lastUpdatedTime:
        description: |
          The recent timestamp which a given API is updated in the external store.
        type: string
        example: 2019-09-09T13:57:16.229

  #-----------------------------------------------------
  # The API-External-Store List resource
  #-----------------------------------------------------
  APIExternalStoreList:
    title: API External Store List
    properties:
      count:
        type: integer
        description: |
          Number of external stores returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/APIExternalStore'

  #-----------------------------------------------------
  # The External-Store List resource
  #-----------------------------------------------------
  ExternalStoreList:
    title: External Store List
    properties:
      count:
        type: integer
        description: |
          Number of external stores returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/ExternalStore'

  #-----------------------------------------------------
  # Certificates list resource
  #-----------------------------------------------------
  Certificates:
    title: Certificates
    description: Representation of a list of certificates
    properties:
      count:
        type: integer
        example: 1
      certificates:
        type: array
        items:
          $ref: '#/definitions/CertMetadata'
      pagination:
        $ref: '#/definitions/Pagination'
        # example:
        #   next: "/endpoint-certificates?limit=1&offset=2"
        #   previous: "/endpoint-certificates?limit=1&offset=0"

  #-----------------------------------------------------
  # Certificate metadata resource
  #-----------------------------------------------------
  CertMetadata:
    title: Certificate
    description: Representation of the details of a certificate
    properties:
      alias:
        type: string
        example: wso2carbon
      endpoint:
        type: string
        example: www.abc.com

  #-----------------------------------------------------
  # Certificates information resource
  #-----------------------------------------------------
  CertificateInfo:
    title: Certificate information
    properties:
      status:
        type: string
        example: Active
      validity:
        $ref: '#/definitions/CertificateValidity'
      version:
        type: string
        example: V3
      subject:
        type: string
        example: CN=wso2.com, OU=wso2, O=wso2, L=Colombo, ST=Western, C=LK

  #-----------------------------------------------------
  # Certificate validity period resource
  #-----------------------------------------------------
  CertificateValidity:
    title: Certificate Valid period
    properties:
      from:
        type: string
        example: 12-12-2017
      to:
        type: string
        example: 01-01-2019

  #-----------------------------------------------------
  # Client Certificates list resource
  #-----------------------------------------------------
  ClientCertificates:
    title: Client Certificates
    description: Representation of a list of client certificates
    properties:
      count:
        type: integer
        example: 1
      certificates:
        type: array
        items:
          $ref: '#/definitions/ClientCertMetadata'
      pagination:
        $ref: '#/definitions/Pagination'
        # example:
        #   next: "/client-certificates?limit=1&offset=2"
        #   previous: "/client-certificates?limit=1&offset=0"

  #-----------------------------------------------------
  # Certificate metadata resource
  #-----------------------------------------------------
  ClientCertMetadata:
    title: Client certificate meta data
    description: Meta data of certificate
    properties:
      alias:
        type: string
        example: wso2carbon
      apiId:
        type: string
        example: 64eca60b-2e55-4c38-8603-e9e6bad7d809
      tier:
        type: string
        example: Gold

  #-----------------------------------------------------
  # The Label resource
  #-----------------------------------------------------
  Label:
    title: Label
    required:
      - name
    properties:
      name:
        type: string
        example: "marketing_store"
      description:
        type: string
        example: "Public microgateway for marketing"
      access_urls:
        type: array
        items:
          type: string
        example: "https://localhost:9095"

  #-----------------------------------------------------
  # The Label List resource
  #-----------------------------------------------------
  LabelList:
    title: Label List
    properties:
      count:
        type: integer
        description: |
          Number of Labels returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/Label'
      pagination:
        $ref: '#/definitions/Pagination'

  #-----------------------------------------------------
  # The Lifecycle state resource
  #-----------------------------------------------------
  LifecycleState:
    title:  Lifecycle State
    properties:
      state:
        type: string
        example: "Created"
      checkItems:
        type: array
        items:
          properties:
            name:
              type: string
              example: "Deprecate old versions after publishing the API"
            value:
              type: boolean
              example: false
            requiredStates:
              type: array
              items:
                type: string
              example: []
      availableTransitions:
        type: array
        items:
          properties:
            event:
              type: string
              example: "Publish"
            targetState:
              type: string
              example: "Published"

  #-----------------------------------------------------
  # The Lifecycle history resource
  #-----------------------------------------------------

  LifecycleHistory:
    title: Lifecycle history item list
    properties:
      count:
        type: integer
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/LifecycleHistoryItem'

  #-----------------------------------------------------
  # The Lifecycle history item resource
  #-----------------------------------------------------

  LifecycleHistoryItem:
    title: Lifecycle history item
    properties:
      previousState:
        type: string
        example: "Created"
      postState:
        type: string
        example: "Published"
      user:
        type: string
        example: "admin"
      updatedTime:
        type: string
        format: dateTime
        example: "2019-02-31T23:59:60Z"


  #-----------------------------------------------------
  # The workflow executor's response resource
  #-----------------------------------------------------
  WorkflowResponse:
    title: workflow Response
    required:
      - workflowStatus
    properties:
      workflowStatus:
        description: |
          This attribute declares whether this workflow task is approved or rejected.
        type: string
        enum:
          - CREATED
          - APPROVED
          - REJECTED
          - REGISTERED
        example: APPROVED
      jsonPayload:
        description: |
          Attributes that returned after the workflow execution
        type: string
        example: null
      lifecycleState:
        $ref: '#/definitions/LifecycleState'

  #-----------------------------------------------------
  # The OpenAPI Definition Validation Response
  #-----------------------------------------------------
  OpenAPIDefinitionValidationResponse:
    title: OpenAPI Definition Validation Response
    required:
      - isValid
    properties:
      isValid:
        description: |
          This attribute declares whether this definition is valid or not.
        type: boolean
        example: true
      content:
        description: |
          OpenAPI definition content.
        type: string
      info:
        description: |
          API definition information
        properties:
          name:
            type: string
            example: "PetStore"
          version:
            type: string
            example: "1.0.0"
          context:
            type: string
            example: "/petstore"
          description:
            type: string
            example: "A sample API that uses a petstore as an example to demonstrate swagger-2.0 specification"
          openAPIVersion:
            type: string
            example: "3.0.0"
          endpoints:
            type: array
            description: |
              contains host/servers specified in the OpenAPI file/URL
            items:
              type: string
              example: "https://localhost:9443/am/sample/pizzashack/v1/api/"
      errors:
        type: array
        description: |
          If there are more than one error list them out.
          For example, list out validation errors by each field.
        items:
          $ref: '#/definitions/ErrorListItem'

  #-----------------------------------------------------
  # The WSDL Definition Validation Response
  #-----------------------------------------------------
  WSDLValidationResponse:
    title: WSDL Definition Validation Response
    required:
      - isValid
    properties:
      isValid:
        description: |
          This attribute declares whether this definition is valid or not.
        type: boolean
        example: true
      errors:
        type: array
        description: |
          If there are more than one error list them out.
          For example, list out validation errors by each field.
        items:
          $ref: '#/definitions/ErrorListItem'
      wsdlInfo:
        description:
          Summary of the WSDL including the basic information
        properties:
          version:
            description: |
              WSDL version
            type: string
            example: "1.1"
          endpoints:
            description: |
              A list of endpoints the service exposes
            type: array
            items:
              properties:
                name:
                  type: string
                  description: "Name of the endpoint"
                  example: "StockQuoteSoap"
                location:
                  type: string
                  description: "Endpoint URL"
                  example: "http://www.webservicex.net/stockquote.asmx"

  GraphQLValidationResponse:
    title: GraphQL API definition validation Response
    required:
      - isValid
      - errorMessage
    properties:
      isValid:
        description: |
          This attribute declares whether this definition is valid or not.
        type: boolean
        example: true
      errorMessage:
        description: |
          This attribute declares the validation error message
        type: string
      graphQLInfo:
        description:
          Summary of the GraphQL including the basic information
        properties:
          operations:
            type: array
            items:
              $ref: '#/definitions/APIOperations'
          graphQLSchema:
            $ref: '#/definitions/GraphQLSchema'

  #-----------------------------------------------------
  # The API Endpoint URL Validation Response Resource
  #-----------------------------------------------------
  ApiEndpointValidationResponse:
    title: API Endpoint url validation response
    required:
      - statusCode
      - statusMessage
    properties:
      statusCode:
        type: integer
        description: HTTP status code
        example: 200
      statusMessage:
        type: string
        description: string
        example: OK
      error:
        type: string
        description: |
          If an error occurs, the error message will be set to this property.
          If not, this will remain null.
        example: null

  #-----------------------------------------------------
  # The Threat Protection Policy List Resource
  #-----------------------------------------------------
  ThreatProtectionPolicyList:
    title: "Threat Protection Policy List"
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/ThreatProtectionPolicy'

  #-----------------------------------------------------
  # The Threat Protection Policy resource
  #-----------------------------------------------------
  ThreatProtectionPolicy:
    title: "Threat Protection Policy Schema"
    required:
      - name
      - type
      - policy
    properties:
      uuid:
        type: string
        description: Policy ID
      name:
        type: string
        description: Name of the policy
      type:
        type: string
        description: Type of the policy
      policy:
        type: string
        description: policy as a json string

  #-----------------------------------------------------
  # The Result List resource
  #-----------------------------------------------------
  SearchResultList:
    title: Unified Search Result List
    properties:
      count:
        type: integer
        description: |
          Number of results returned.
        example: 1
      list:
        type: array
        items:
          anyOf:
            - $ref: '#/definitions/APISearchResult'
            - $ref: '#/definitions/APIProductSearchResult'
            - $ref: '#/definitions/DocumentSearchResult'
      pagination:
        $ref: '#/definitions/Pagination'

  SearchResult:
    title: Search Result
    required:
      - "name"
    discriminator: "name"
    properties:
      id:
        type: string
        example: 01234567-0123-0123-0123-012345678901
      name:
        type: string
        example: TestAPI
      type:
        type: string
        enum:
          - DOC
          - API
          - APIProduct
        example: API
      transportType:
        type: string
        description: Accepted values are HTTP, WS, SOAPTOREST, GRAPHQL

  APISearchResult:
    title: API Result
    allOf:
      - $ref: '#/definitions/SearchResult'
      - properties:
          description:
            type: string
            description: A brief description about the API
            example: A calculator API that supports basic operations
          context:
            type: string
            description: A string that represents the context of the user's request
            example: CalculatorAPI
          version:
            type: string
            description: The version of the API
            example: 1.0.0
          provider:
            description: |
              If the provider value is not given, the user invoking the API will be used as the provider.
            type: string
            example: admin
          status:
            type: string
            description: This describes in which status of the lifecycle the API is
            example: CREATED
          thumbnailUri:
            type: string
            example: /apis/01234567-0123-0123-0123-012345678901/thumbnail

  APIProductSearchResult:
    title: API Result
    allOf:
      - $ref: '#/definitions/SearchResult'
      - properties:
          description:
            type: string
            description: A brief description about the API
            example: A calculator API that supports basic operations
          context:
            type: string
            description: A string that represents the context of the user's request
            example: CalculatorAPI
          version:
            type: string
            description: The version of the API Product
            example: 1.0.0
          provider:
            description: |
              If the provider value is not given, the user invoking the API will be used as the provider.
            type: string
            example: admin
          status:
            type: string
            description: This describes in which status of the lifecycle the APIPRODUCT is
            example: PUBLISHED
          thumbnailUri:
            type: string
            example: /apis/01234567-0123-0123-0123-012345678901/thumbnail



  #-----------------------------------------------------
  # The API monetization resource
  #-----------------------------------------------------
  APIMonetizationInfo:
    title: API monetization object
    required:
      - enabled
    properties:
      enabled:
        type: boolean
        description: Flag to indicate the monetization status
        example: true
      properties:
        type: object
        description: Map of custom properties related to monetization
        additionalProperties:
          type: string

  DocumentSearchResult:
    title: Document Result
    allOf:
      - $ref: '#/definitions/SearchResult'
      - properties:
          docType:
            type: string
            enum:
              - HOWTO
              - SAMPLES
              - PUBLIC_FORUM
              - SUPPORT_FORUM
              - API_MESSAGE_FORMAT
              - SWAGGER_DOC
              - OTHER
            example: HOWTO
          summary:
            type: string
            example: "Summary of Calculator Documentation"
          sourceType:
            type: string
            enum:
              - INLINE
              - URL
              - FILE
            example: INLINE
          sourceUrl:
            type: string
            example: ""
          otherTypeName:
            type: string
            example: ""
          visibility:
            type: string
            enum:
              - OWNER_ONLY
              - PRIVATE
              - API_LEVEL
            example: API_LEVEL
          apiName:
            type: string
            description: The name of the associated API
            example: TestAPI
          apiVersion:
            type: string
            description: The version of the associated API
            example: 1.0.0
          apiProvider:
            type: string
            example: admin
          apiUUID:
            type: string
          associatedType:
            type: string

  #-----------------------------------------------------
  # The Mock Response Payload List resource
  #-----------------------------------------------------
  MockResponsePayloadList:
    title: Mock Response Payload list
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/MockResponsePayloadInfo'

  #-----------------------------------------------------
  # The Mock Response Payload info resource
  #-----------------------------------------------------
  MockResponsePayloadInfo:
    title : Mock Response Payload info object
    properties:
      path:
        type: string
        description: path of the resource
        example: "/menu"
      content:
        type: string
        description: new modified code
        example: "var accept = \"\\\"\"+mc.getProperty('AcceptHeader')+\"\\\"\";\nvar responseCode = mc.getProperty('query.param.responseCode');\nvar responseCodeStr = \"\\\"\"+responseCode+\"\\\"\";\nvar responses = [];\n\nif (!responses[200]) {\n responses [200] = [];\n}\nresponses[200][\"application/json\"] = \n[ {\n  \"price\" : \"string\",\n  \"description\" : \"string\",\n  \"name\" : \"string\",\n  \"image\" : \"string\"\n} ]\n\n/*if (!responses[304]) {\n  responses[304] = [];\n}\nresponses[304][\"application/(json or xml)\"] = {}/<>*/\n\nif (!responses[406]) {\n responses [406] = [];\n}\nresponses[406][\"application/json\"] = \n{\n  \"message\" : \"string\",\n  \"error\" : [ {\n    \"message\" : \"string\",\n    \"code\" : 0\n  } ],\n  \"description\" : \"string\",\n  \"code\" : 0,\n  \"moreInfo\" : \"string\"\n}\n\nresponses[501] = [];\nresponses[501][\"application/json\"] = {\n\"code\" : 501,\n\"description\" : \"Not Implemented\"}\nresponses[501][\"application/xml\"] = <response><code>501</code><description>Not Implemented</description></response>;\n\nif (!responses[responseCode]) {\n responseCode = 501;\n}\n\nif (responseCode == null) {\n responseCode = 200;\n responseCodeStr = \"200\";\n}\n\nif (accept == null || !responses[responseCode][accept]) {\n accept = \"application/json\";\n}\n\nif (accept === \"application/json\") {\n mc.setProperty('CONTENT_TYPE', 'application/json');\n mc.setProperty('HTTP_SC', responseCodeStr);\n mc.setPayloadJSON(responses[responseCode][\"application/json\"]);\n} else if (accept === \"application/xml\") {\n mc.setProperty('CONTENT_TYPE', 'application/xml');\n mc.setProperty('HTTP_SC', responseCodeStr);\n mc.setPayloadXML(responses[responseCode][\"application/xml\"]);\n}"
      verb:
        type: string
        example: "POST"

  #-----------------------------------------------------
  # The Resource policy List resource
  #-----------------------------------------------------
  ResourcePolicyList:
    title: Resource policy List
    properties:
      list:
        type: array
        items:
          $ref: '#/definitions/ResourcePolicyInfo'
      count:
        type: integer
        description: |
          Number of policy resources returned.
        example: 1

  #-----------------------------------------------------
  # The Resource Policy Info resource
  #-----------------------------------------------------
  ResourcePolicyInfo:
    title: Resource policy Info object with conversion policy resource details.
    properties:
      id:
        type: string
        description: |
          UUID of the resource policy registry artifact
        readOnly: true
        example: 01234567-0123-0123-0123-012345678901
      httpVerb:
        type: string
        description: HTTP verb used for the resource path
        example: get
      resourcePath:
        type: string
        description: A string that represents the resource path of the api for the related resource policy
        example: checkPhoneNumber
      content:
        type: string
        description: The resource policy content
        example: "<header description=\"SOAPAction\" name=\"SOAPAction\" scope=\"transport\" value=\"http://ws.cdyne.com/PhoneVerify/query/CheckPhoneNumber\"/>"

  #-----------------------------------------------------
  # The settings resource
  #-----------------------------------------------------
  Settings:
    title: SettingsDTO
    properties:
      storeUrl:
        type: string
        description: Store URL
        example: "https://localhost:9443/devportal"
      environment:
        type: array
        items:
          $ref: '#/definitions/Environment'
      scopes:
        type: array
        items:
          type: string
        example: ["apim:api_create","apim:api_publish"]
      monetizationAttributes:
        type: array
        items:
          $ref: '#/definitions/MonetizationAttribute'
        example: []
      securityAuditProperties:
        type: object
        items:
          type: string
      externalStoresEnabled:
        type: boolean
        description: |
          Is External Stores configuration enabled
        example: true
      docVisibilityEnabled:
        type: boolean
        description: |
          Is Document Visibility configuration enabled
        example: false
      crossTenantSubscriptionEnabled:
        type: boolean
        description: |
          Is Cross Tenant Subscriptions Enabled
        example: false
        default: false
      deployments:
        type: array
        items:
          $ref: '#/definitions/Deployments'

  #-----------------------------------------------------
  # The SecurityAuditAttribute resource
  #-----------------------------------------------------
  SecurityAuditAttribute:
    title: SecurityAuditAttributeDTO
    properties:
      isGlobal:
        type: boolean
        example: false
      overrideGlobal:
        type: boolean
        example: false
      apiToken:
        type: string
        example: b1267ytf-b7gc-4aee-924d-ece81241efec
      collectionId:
        type: string
        example: 456ef957-5a79-449f-83y3-9027945d3c60
      baseUrl:
        type: string

  WSDLInfo:
    title: WSDL information of the API. This is only available if the API is a SOAP API.
    properties:
      type:
        type: string
        description: Indicates whether the WSDL is a single WSDL or an archive in ZIP format
        enum:
          - WSDL
          - ZIP

#-----------------------------------------------------
# The pagination resource
#-----------------------------------------------------
  Pagination:
    title: Pagination
    properties:
      offset:
        type: integer
        example: 0
      limit:
        type: integer
        example: 1
      total:
        type: integer
        example: 10
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
  MonetizationAttribute:
    title: Monetization attribute object
    properties:
      required:
        type: boolean
        description: |
          Is attribute required
        example: true
      name:
        type: string
        description: |
          Name of the attribute
      displayName:
        type: string
        description: |
          Display name of the attribute
      description:
        type: string
        description: |
          Description of the attribute
      hidden:
        type: boolean
        description: |
          Is attribute hidden
      default:
        type: string
        description: |
          Default value of the attribute

  #-----------------------------------------------------
  # The Tenant resource
  #-----------------------------------------------------
  Tenant :
    title: Tenant
    properties:
      domain:
        type: string
        description: tenant domain
        example: "wso2.com"
      status:
        type: string
        description: current status of the tenant active/inactive
        example: "active"
  #-----------------------------------------------------
  # The Tenant List resource
  #-----------------------------------------------------
  TenantList :
    title: Tenant list
    properties:
      count:
        type: integer
        description: |
          Number of tenants returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/Tenant'
      pagination:
        $ref: '#/definitions/Pagination'
  #----------------------------------------------
  # The Alert list resource.
  #----------------------------------------------
  AlertTypesList:
    title: Alert Types List
    properties:
      count:
        type: integer
        description: The number of alerts
        example: 3
      alerts:
        type: array
        items:
          $ref: '#/definitions/AlertType'

  #----------------------------------------------
  # The AlertType resource.
  #----------------------------------------------
  AlertType:
    title: Alert Type
    properties:
      id:
        type: integer
        description: The alert Id
        example: 1
      name:
        type: string
        description: The name of the alert.
        example: "AbnormalRequestTime"
      requireConfiguration:
        type: boolean
        description: Whether the alert type require additional configurations.
        example: true

  #----------------------------------------------
  # The Alert resource.
  #----------------------------------------------
  Alert:
    title: Alert
    properties:
      id:
        type: integer
        description: The alert Id
        example: 1
      name:
        type: string
        description: The name of the alert.
        example: "AbnormalRequestsPerMin"
      configuration:
        type: array
        items:
          $ref: '#/definitions/AlertConfig'

  #-----------------------------------------------
  # The Alert Info resource definition.
  #-----------------------------------------------
  AlertsInfo:
    title: Alerts Info
    properties:
      alerts:
        type: array
        items:
          $ref: '#/definitions/Alert'
      emailList:
        type: array
        items:
          type: string

  #-----------------------------------------------
  # The Alert Info Response resource definition.
  #-----------------------------------------------
  AlertsInfoResponse:
    title: Alerts Info Response
    properties:
      alerts:
        type: array
        items:
          $ref: '#/definitions/Alert'
      emailList:
        type: array
        items:
          type: string
      failedConfigurations:
        type: array
        items:
          $ref: '#/definitions/AlertConfig'

  #-----------------------------------------------
  # The Alert Config List resource definition.
  #-----------------------------------------------
  AlertConfigList:
    title: Alert Configuration List
    properties:
      count:
        type: integer
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/AlertConfig'

  #-----------------------------------------------
  # The Alert Config resource definition.
  #-----------------------------------------------
  AlertConfig:
    title: Alert Configuration
    properties:
      configurationId:
        type: string
        description: The alert config subscription id.
        example: UGl6emFTaGFja0FQSSsxLjAuMCtEZWZhdWx0QXBwbGljYXRpb24K
      configuration:
        type: object
        description: The config parameters.
        additionalProperties:
          type: string
        example:
          apiName: 'PizzaShackAPI'
          apiVersion: '1.0.0'
          applicationName: 'DefaultApplication'
          requestConunt: '12'

  #-----------------------------------------------
  # The Alert Config Info resource definition.
  #-----------------------------------------------
  AlertConfigInfo:
    title: Alert Configuration Info
    type: object
    description: The config parameters.
    additionalProperties:
      type: string
    example:
      apiName: 'PizzaShackAPI'
      apiVersion: '1.0.0'
      applicationName: 'DefaultApplication'
      requestConunt: '12'

  #-----------------------------------------------------
  # The Category resource
  #-----------------------------------------------------
  APICategory:
    title: API Category
    required:
    - name
    properties:
      id:
        type: string
        example: "01234567-0123-0123-0123-012345678901"
      name:
        type: string
        example: "Finance"
      description:
        type: string
        example: "Finance related APIs"

  #-----------------------------------------------------
  # The Category List resource
  #-----------------------------------------------------
  APICategoryList:
    title: API Category List
    properties:
      count:
        type: integer
        description: |
          Number of API categories returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/APICategory'

  #-----------------------------------------------------
  # The KeyManager resource
  #-----------------------------------------------------
  KeyManagerInfo:
    title: Key Manager Info
    required:
      - name
      - type
    properties:
      id:
        type: string
        example: "01234567-0123-0123-0123-012345678901"
      name:
        type: string
        example: "WSO2 IS"
      displayName:
        type: string
        description: |
          display name of Keymanager
        example: Keymanager1
      type:
        type: string
        example: "IS"
      description:
        type: string
        example: "This is a key manager for Developers"
      enabled:
        type: boolean
        example: true
      additionalProperties:
        type: array
        items:
          type: object

  #-----------------------------------------------------
  # The KeyManager List resource
  #-----------------------------------------------------
  KeyManagerList:
    title: Key Manager List
    properties:
      count:
        type: integer
        description: |
          Number of Key managers returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/KeyManagerInfo'

  #-----------------------------------------------------
  # The Deployment List resource
  #-----------------------------------------------------
  DeploymentList:
    title: Deployment List
    properties:
      count:
        type: integer
        description: |
          Number of deployment clusters returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/Deployments'

  #-----------------------------------------------------
  # The Deployment resource
  #-----------------------------------------------------
  Deployments:
    title: Deployments
    required:
      - name
      - clusters
    properties:
      name:
        type: string
        example: Kubernetes
      clusters:
        type: array
        items:
          $ref: '#/definitions/DeploymentClusterInfo'

  #-----------------------------------------------------
  # The DeploymentClusterInfo resource
  #-----------------------------------------------------
  DeploymentClusterInfo:
    title: DeploymentClusterInfo
    required:
      - clusterName
      - displayName
      - accessURL
      - properties
    properties:
      clusterName:
        type: string
        example: minikube
      accessURL:
        type: string
        example: "https://api.com"
      displayName:
        type: string
        example: "kubernetes-minikube"
      properties:
        type: object
        additionalProperties:
          type: string


  #-----------------------------------------------------
  # The DeploymentStatus List resource
  #-----------------------------------------------------
  DeploymentStatusList:
    title: DeploymentStatus List
    properties:
      count:
        type: integer
        description: |
          Status of the deployments returned.
        example: 1
      list:
        type: array
        items:
          $ref: '#/definitions/DeploymentStatus'

  #-----------------------------------------------------
  # The DeploymentStatus resource
  #-----------------------------------------------------
  DeploymentStatus:
    title: DeploymentStatus
    required:
      - type
      - clusters
    properties:
      type:
        type: string
        example: Kubernetes
      clusters:
        type: array
        items:
          $ref: '#/definitions/DeploymentClusterStatus'

  #-----------------------------------------------------
  # The DeploymentClusterStatus resource
  #-----------------------------------------------------
  DeploymentClusterStatus:
    title: DeploymentClusterStatus
    required:
      - clusterName
      - podsRunning
      - healthStatus
    properties:
      clusterName:
        type: string
        example: Minikube
      podsRunning:
        type: integer
        default: 0
      healthStatus:
        type: array
        items:
          $ref: '#/definitions/PodStatus'

  #-----------------------------------------------------
  # The DeploymentEnvironments resource
  #-----------------------------------------------------
  DeploymentEnvironments:
    title: DeploymentEnvironments
    required:
      - type
      - clusterName
    properties:
      type:
        type: string
        example: Kubernetes
      clusterName:
        type: array
        items:
          type: string
        example: ["minikube"]

  #-----------------------------------------------------
  # The PodStatus resource
  #-----------------------------------------------------
  PodStatus:
    title: PodStatus
    required:
      - name
      - ready
      - status
      - age
    properties:
      name:
        type: string
        example: petStore-677bb7cc65-shb2f
      ready:
        type: string
        example: 1/1
      status:
        type: string
        example: running
      creationTimestamp:
        type: string
        example: 2020-05-12T06:12:00Z
#-----------------------------------------------------
# END-OF-FILE
#-----------------------------------------------------
